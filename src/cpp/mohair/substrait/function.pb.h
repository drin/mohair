// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: substrait/function.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_substrait_2ffunction_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_substrait_2ffunction_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "parameterized_types.pb.h"
#include "type.pb.h"
#include "type_expressions.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_substrait_2ffunction_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_substrait_2ffunction_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_substrait_2ffunction_2eproto;
namespace substrait {
class FunctionSignature;
struct FunctionSignatureDefaultTypeInternal;
extern FunctionSignatureDefaultTypeInternal _FunctionSignature_default_instance_;
class FunctionSignature_Aggregate;
struct FunctionSignature_AggregateDefaultTypeInternal;
extern FunctionSignature_AggregateDefaultTypeInternal _FunctionSignature_Aggregate_default_instance_;
class FunctionSignature_Argument;
struct FunctionSignature_ArgumentDefaultTypeInternal;
extern FunctionSignature_ArgumentDefaultTypeInternal _FunctionSignature_Argument_default_instance_;
class FunctionSignature_Argument_EnumArgument;
struct FunctionSignature_Argument_EnumArgumentDefaultTypeInternal;
extern FunctionSignature_Argument_EnumArgumentDefaultTypeInternal _FunctionSignature_Argument_EnumArgument_default_instance_;
class FunctionSignature_Argument_TypeArgument;
struct FunctionSignature_Argument_TypeArgumentDefaultTypeInternal;
extern FunctionSignature_Argument_TypeArgumentDefaultTypeInternal _FunctionSignature_Argument_TypeArgument_default_instance_;
class FunctionSignature_Argument_ValueArgument;
struct FunctionSignature_Argument_ValueArgumentDefaultTypeInternal;
extern FunctionSignature_Argument_ValueArgumentDefaultTypeInternal _FunctionSignature_Argument_ValueArgument_default_instance_;
class FunctionSignature_Description;
struct FunctionSignature_DescriptionDefaultTypeInternal;
extern FunctionSignature_DescriptionDefaultTypeInternal _FunctionSignature_Description_default_instance_;
class FunctionSignature_FinalArgNormal;
struct FunctionSignature_FinalArgNormalDefaultTypeInternal;
extern FunctionSignature_FinalArgNormalDefaultTypeInternal _FunctionSignature_FinalArgNormal_default_instance_;
class FunctionSignature_FinalArgVariadic;
struct FunctionSignature_FinalArgVariadicDefaultTypeInternal;
extern FunctionSignature_FinalArgVariadicDefaultTypeInternal _FunctionSignature_FinalArgVariadic_default_instance_;
class FunctionSignature_Implementation;
struct FunctionSignature_ImplementationDefaultTypeInternal;
extern FunctionSignature_ImplementationDefaultTypeInternal _FunctionSignature_Implementation_default_instance_;
class FunctionSignature_Scalar;
struct FunctionSignature_ScalarDefaultTypeInternal;
extern FunctionSignature_ScalarDefaultTypeInternal _FunctionSignature_Scalar_default_instance_;
class FunctionSignature_Window;
struct FunctionSignature_WindowDefaultTypeInternal;
extern FunctionSignature_WindowDefaultTypeInternal _FunctionSignature_Window_default_instance_;
}  // namespace substrait
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace substrait {
enum FunctionSignature_FinalArgVariadic_ParameterConsistency : int {
  FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_UNSPECIFIED = 0,
  FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_CONSISTENT = 1,
  FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_INCONSISTENT = 2,
  FunctionSignature_FinalArgVariadic_ParameterConsistency_FunctionSignature_FinalArgVariadic_ParameterConsistency_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FunctionSignature_FinalArgVariadic_ParameterConsistency_FunctionSignature_FinalArgVariadic_ParameterConsistency_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FunctionSignature_FinalArgVariadic_ParameterConsistency_IsValid(int value);
extern const uint32_t FunctionSignature_FinalArgVariadic_ParameterConsistency_internal_data_[];
constexpr FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MIN = static_cast<FunctionSignature_FinalArgVariadic_ParameterConsistency>(0);
constexpr FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MAX = static_cast<FunctionSignature_FinalArgVariadic_ParameterConsistency>(2);
constexpr int FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor();
template <typename T>
const std::string& FunctionSignature_FinalArgVariadic_ParameterConsistency_Name(T value) {
  static_assert(std::is_same<T, FunctionSignature_FinalArgVariadic_ParameterConsistency>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ParameterConsistency_Name().");
  return FunctionSignature_FinalArgVariadic_ParameterConsistency_Name(static_cast<FunctionSignature_FinalArgVariadic_ParameterConsistency>(value));
}
template <>
inline const std::string& FunctionSignature_FinalArgVariadic_ParameterConsistency_Name(FunctionSignature_FinalArgVariadic_ParameterConsistency value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool FunctionSignature_FinalArgVariadic_ParameterConsistency_Parse(absl::string_view name, FunctionSignature_FinalArgVariadic_ParameterConsistency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionSignature_FinalArgVariadic_ParameterConsistency>(
      FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor(), name, value);
}
enum FunctionSignature_Window_WindowType : int {
  FunctionSignature_Window_WindowType_WINDOW_TYPE_UNSPECIFIED = 0,
  FunctionSignature_Window_WindowType_WINDOW_TYPE_STREAMING = 1,
  FunctionSignature_Window_WindowType_WINDOW_TYPE_PARTITION = 2,
  FunctionSignature_Window_WindowType_FunctionSignature_Window_WindowType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FunctionSignature_Window_WindowType_FunctionSignature_Window_WindowType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FunctionSignature_Window_WindowType_IsValid(int value);
extern const uint32_t FunctionSignature_Window_WindowType_internal_data_[];
constexpr FunctionSignature_Window_WindowType FunctionSignature_Window_WindowType_WindowType_MIN = static_cast<FunctionSignature_Window_WindowType>(0);
constexpr FunctionSignature_Window_WindowType FunctionSignature_Window_WindowType_WindowType_MAX = static_cast<FunctionSignature_Window_WindowType>(2);
constexpr int FunctionSignature_Window_WindowType_WindowType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
FunctionSignature_Window_WindowType_descriptor();
template <typename T>
const std::string& FunctionSignature_Window_WindowType_Name(T value) {
  static_assert(std::is_same<T, FunctionSignature_Window_WindowType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WindowType_Name().");
  return FunctionSignature_Window_WindowType_Name(static_cast<FunctionSignature_Window_WindowType>(value));
}
template <>
inline const std::string& FunctionSignature_Window_WindowType_Name(FunctionSignature_Window_WindowType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FunctionSignature_Window_WindowType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool FunctionSignature_Window_WindowType_Parse(absl::string_view name, FunctionSignature_Window_WindowType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionSignature_Window_WindowType>(
      FunctionSignature_Window_WindowType_descriptor(), name, value);
}
enum FunctionSignature_Implementation_Type : int {
  FunctionSignature_Implementation_Type_TYPE_UNSPECIFIED = 0,
  FunctionSignature_Implementation_Type_TYPE_WEB_ASSEMBLY = 1,
  FunctionSignature_Implementation_Type_TYPE_TRINO_JAR = 2,
  FunctionSignature_Implementation_Type_FunctionSignature_Implementation_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FunctionSignature_Implementation_Type_FunctionSignature_Implementation_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FunctionSignature_Implementation_Type_IsValid(int value);
extern const uint32_t FunctionSignature_Implementation_Type_internal_data_[];
constexpr FunctionSignature_Implementation_Type FunctionSignature_Implementation_Type_Type_MIN = static_cast<FunctionSignature_Implementation_Type>(0);
constexpr FunctionSignature_Implementation_Type FunctionSignature_Implementation_Type_Type_MAX = static_cast<FunctionSignature_Implementation_Type>(2);
constexpr int FunctionSignature_Implementation_Type_Type_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
FunctionSignature_Implementation_Type_descriptor();
template <typename T>
const std::string& FunctionSignature_Implementation_Type_Name(T value) {
  static_assert(std::is_same<T, FunctionSignature_Implementation_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return FunctionSignature_Implementation_Type_Name(static_cast<FunctionSignature_Implementation_Type>(value));
}
template <>
inline const std::string& FunctionSignature_Implementation_Type_Name(FunctionSignature_Implementation_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FunctionSignature_Implementation_Type_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool FunctionSignature_Implementation_Type_Parse(absl::string_view name, FunctionSignature_Implementation_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionSignature_Implementation_Type>(
      FunctionSignature_Implementation_Type_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class FunctionSignature_Implementation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Implementation) */ {
 public:
  inline FunctionSignature_Implementation() : FunctionSignature_Implementation(nullptr) {}
  ~FunctionSignature_Implementation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Implementation(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Implementation(const FunctionSignature_Implementation& from)
      : FunctionSignature_Implementation(nullptr, from) {}
  FunctionSignature_Implementation(FunctionSignature_Implementation&& from) noexcept
    : FunctionSignature_Implementation() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Implementation& operator=(const FunctionSignature_Implementation& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Implementation& operator=(FunctionSignature_Implementation&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Implementation& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionSignature_Implementation* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Implementation*>(
               &_FunctionSignature_Implementation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(FunctionSignature_Implementation& a, FunctionSignature_Implementation& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Implementation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Implementation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Implementation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Implementation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Implementation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Implementation& from) {
    FunctionSignature_Implementation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Implementation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Implementation";
  }
  protected:
  explicit FunctionSignature_Implementation(::google::protobuf::Arena* arena);
  FunctionSignature_Implementation(::google::protobuf::Arena* arena, const FunctionSignature_Implementation& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Type = FunctionSignature_Implementation_Type;
  static constexpr Type TYPE_UNSPECIFIED = FunctionSignature_Implementation_Type_TYPE_UNSPECIFIED;
  static constexpr Type TYPE_WEB_ASSEMBLY = FunctionSignature_Implementation_Type_TYPE_WEB_ASSEMBLY;
  static constexpr Type TYPE_TRINO_JAR = FunctionSignature_Implementation_Type_TYPE_TRINO_JAR;
  static inline bool Type_IsValid(int value) {
    return FunctionSignature_Implementation_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = FunctionSignature_Implementation_Type_Type_MIN;
  static constexpr Type Type_MAX = FunctionSignature_Implementation_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = FunctionSignature_Implementation_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return FunctionSignature_Implementation_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return FunctionSignature_Implementation_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return FunctionSignature_Implementation_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kUriFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // string uri = 2 [json_name = "uri"];
  void clear_uri() ;
  const std::string& uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uri(Arg_&& arg, Args_... args);
  std::string* mutable_uri();
  PROTOBUF_NODISCARD std::string* release_uri();
  void set_allocated_uri(std::string* value);

  private:
  const std::string& _internal_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uri(
      const std::string& value);
  std::string* _internal_mutable_uri();

  public:
  // .substrait.FunctionSignature.Implementation.Type type = 1 [json_name = "type"];
  void clear_type() ;
  ::substrait::FunctionSignature_Implementation_Type type() const;
  void set_type(::substrait::FunctionSignature_Implementation_Type value);

  private:
  ::substrait::FunctionSignature_Implementation_Type _internal_type() const;
  void _internal_set_type(::substrait::FunctionSignature_Implementation_Type value);

  public:
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Implementation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr uri_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_FinalArgVariadic final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.FinalArgVariadic) */ {
 public:
  inline FunctionSignature_FinalArgVariadic() : FunctionSignature_FinalArgVariadic(nullptr) {}
  ~FunctionSignature_FinalArgVariadic() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_FinalArgVariadic(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_FinalArgVariadic(const FunctionSignature_FinalArgVariadic& from)
      : FunctionSignature_FinalArgVariadic(nullptr, from) {}
  FunctionSignature_FinalArgVariadic(FunctionSignature_FinalArgVariadic&& from) noexcept
    : FunctionSignature_FinalArgVariadic() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_FinalArgVariadic& operator=(const FunctionSignature_FinalArgVariadic& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_FinalArgVariadic& operator=(FunctionSignature_FinalArgVariadic&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_FinalArgVariadic& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionSignature_FinalArgVariadic* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_FinalArgVariadic*>(
               &_FunctionSignature_FinalArgVariadic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FunctionSignature_FinalArgVariadic& a, FunctionSignature_FinalArgVariadic& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_FinalArgVariadic* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_FinalArgVariadic* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_FinalArgVariadic* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_FinalArgVariadic>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_FinalArgVariadic& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_FinalArgVariadic& from) {
    FunctionSignature_FinalArgVariadic::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_FinalArgVariadic* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.FinalArgVariadic";
  }
  protected:
  explicit FunctionSignature_FinalArgVariadic(::google::protobuf::Arena* arena);
  FunctionSignature_FinalArgVariadic(::google::protobuf::Arena* arena, const FunctionSignature_FinalArgVariadic& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using ParameterConsistency = FunctionSignature_FinalArgVariadic_ParameterConsistency;
  static constexpr ParameterConsistency PARAMETER_CONSISTENCY_UNSPECIFIED = FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_UNSPECIFIED;
  static constexpr ParameterConsistency PARAMETER_CONSISTENCY_CONSISTENT = FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_CONSISTENT;
  static constexpr ParameterConsistency PARAMETER_CONSISTENCY_INCONSISTENT = FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_INCONSISTENT;
  static inline bool ParameterConsistency_IsValid(int value) {
    return FunctionSignature_FinalArgVariadic_ParameterConsistency_IsValid(value);
  }
  static constexpr ParameterConsistency ParameterConsistency_MIN = FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MIN;
  static constexpr ParameterConsistency ParameterConsistency_MAX = FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MAX;
  static constexpr int ParameterConsistency_ARRAYSIZE = FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ParameterConsistency_descriptor() {
    return FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor();
  }
  template <typename T>
  static inline const std::string& ParameterConsistency_Name(T value) {
    return FunctionSignature_FinalArgVariadic_ParameterConsistency_Name(value);
  }
  static inline bool ParameterConsistency_Parse(absl::string_view name, ParameterConsistency* value) {
    return FunctionSignature_FinalArgVariadic_ParameterConsistency_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMinArgsFieldNumber = 1,
    kMaxArgsFieldNumber = 2,
    kConsistencyFieldNumber = 3,
  };
  // int64 min_args = 1 [json_name = "minArgs"];
  void clear_min_args() ;
  ::int64_t min_args() const;
  void set_min_args(::int64_t value);

  private:
  ::int64_t _internal_min_args() const;
  void _internal_set_min_args(::int64_t value);

  public:
  // int64 max_args = 2 [json_name = "maxArgs"];
  void clear_max_args() ;
  ::int64_t max_args() const;
  void set_max_args(::int64_t value);

  private:
  ::int64_t _internal_max_args() const;
  void _internal_set_max_args(::int64_t value);

  public:
  // .substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency consistency = 3 [json_name = "consistency"];
  void clear_consistency() ;
  ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency consistency() const;
  void set_consistency(::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency value);

  private:
  ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency _internal_consistency() const;
  void _internal_set_consistency(::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency value);

  public:
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.FinalArgVariadic)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t min_args_;
    ::int64_t max_args_;
    int consistency_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_FinalArgNormal final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.FinalArgNormal) */ {
 public:
  inline FunctionSignature_FinalArgNormal() : FunctionSignature_FinalArgNormal(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_FinalArgNormal(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_FinalArgNormal(const FunctionSignature_FinalArgNormal& from)
      : FunctionSignature_FinalArgNormal(nullptr, from) {}
  FunctionSignature_FinalArgNormal(FunctionSignature_FinalArgNormal&& from) noexcept
    : FunctionSignature_FinalArgNormal() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_FinalArgNormal& operator=(const FunctionSignature_FinalArgNormal& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_FinalArgNormal& operator=(FunctionSignature_FinalArgNormal&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_FinalArgNormal& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionSignature_FinalArgNormal* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_FinalArgNormal*>(
               &_FunctionSignature_FinalArgNormal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FunctionSignature_FinalArgNormal& a, FunctionSignature_FinalArgNormal& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_FinalArgNormal* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_FinalArgNormal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_FinalArgNormal* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_FinalArgNormal>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const FunctionSignature_FinalArgNormal& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const FunctionSignature_FinalArgNormal& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.FinalArgNormal";
  }
  protected:
  explicit FunctionSignature_FinalArgNormal(::google::protobuf::Arena* arena);
  FunctionSignature_FinalArgNormal(::google::protobuf::Arena* arena, const FunctionSignature_FinalArgNormal& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.FinalArgNormal)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_Description final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Description) */ {
 public:
  inline FunctionSignature_Description() : FunctionSignature_Description(nullptr) {}
  ~FunctionSignature_Description() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Description(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Description(const FunctionSignature_Description& from)
      : FunctionSignature_Description(nullptr, from) {}
  FunctionSignature_Description(FunctionSignature_Description&& from) noexcept
    : FunctionSignature_Description() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Description& operator=(const FunctionSignature_Description& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Description& operator=(FunctionSignature_Description&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Description& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionSignature_Description* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Description*>(
               &_FunctionSignature_Description_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(FunctionSignature_Description& a, FunctionSignature_Description& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Description* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Description* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Description* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Description>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Description& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Description& from) {
    FunctionSignature_Description::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Description* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Description";
  }
  protected:
  explicit FunctionSignature_Description(::google::protobuf::Arena* arena);
  FunctionSignature_Description(::google::protobuf::Arena* arena, const FunctionSignature_Description& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLanguageFieldNumber = 1,
    kBodyFieldNumber = 2,
  };
  // string language = 1 [json_name = "language"];
  void clear_language() ;
  const std::string& language() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_language(Arg_&& arg, Args_... args);
  std::string* mutable_language();
  PROTOBUF_NODISCARD std::string* release_language();
  void set_allocated_language(std::string* value);

  private:
  const std::string& _internal_language() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_language(
      const std::string& value);
  std::string* _internal_mutable_language();

  public:
  // string body = 2 [json_name = "body"];
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* value);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Description)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr language_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_Argument_EnumArgument final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Argument.EnumArgument) */ {
 public:
  inline FunctionSignature_Argument_EnumArgument() : FunctionSignature_Argument_EnumArgument(nullptr) {}
  ~FunctionSignature_Argument_EnumArgument() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Argument_EnumArgument(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Argument_EnumArgument(const FunctionSignature_Argument_EnumArgument& from)
      : FunctionSignature_Argument_EnumArgument(nullptr, from) {}
  FunctionSignature_Argument_EnumArgument(FunctionSignature_Argument_EnumArgument&& from) noexcept
    : FunctionSignature_Argument_EnumArgument() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Argument_EnumArgument& operator=(const FunctionSignature_Argument_EnumArgument& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Argument_EnumArgument& operator=(FunctionSignature_Argument_EnumArgument&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Argument_EnumArgument& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionSignature_Argument_EnumArgument* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Argument_EnumArgument*>(
               &_FunctionSignature_Argument_EnumArgument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(FunctionSignature_Argument_EnumArgument& a, FunctionSignature_Argument_EnumArgument& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Argument_EnumArgument* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Argument_EnumArgument* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Argument_EnumArgument* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Argument_EnumArgument>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Argument_EnumArgument& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Argument_EnumArgument& from) {
    FunctionSignature_Argument_EnumArgument::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Argument_EnumArgument* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Argument.EnumArgument";
  }
  protected:
  explicit FunctionSignature_Argument_EnumArgument(::google::protobuf::Arena* arena);
  FunctionSignature_Argument_EnumArgument(::google::protobuf::Arena* arena, const FunctionSignature_Argument_EnumArgument& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 1,
    kOptionalFieldNumber = 2,
  };
  // repeated string options = 1 [json_name = "options"];
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  const std::string& options(int index) const;
  std::string* mutable_options(int index);
  void set_options(int index, const std::string& value);
  void set_options(int index, std::string&& value);
  void set_options(int index, const char* value);
  void set_options(int index, const char* value, std::size_t size);
  void set_options(int index, absl::string_view value);
  std::string* add_options();
  void add_options(const std::string& value);
  void add_options(std::string&& value);
  void add_options(const char* value);
  void add_options(const char* value, std::size_t size);
  void add_options(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& options() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_options();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_options() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_options();

  public:
  // bool optional = 2 [json_name = "optional"];
  void clear_optional() ;
  bool optional() const;
  void set_optional(bool value);

  private:
  bool _internal_optional() const;
  void _internal_set_optional(bool value);

  public:
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Argument.EnumArgument)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> options_;
    bool optional_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature) */ {
 public:
  inline FunctionSignature() : FunctionSignature(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature(const FunctionSignature& from)
      : FunctionSignature(nullptr, from) {}
  FunctionSignature(FunctionSignature&& from) noexcept
    : FunctionSignature() {
    *this = ::std::move(from);
  }

  inline FunctionSignature& operator=(const FunctionSignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature& operator=(FunctionSignature&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionSignature* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature*>(
               &_FunctionSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(FunctionSignature& a, FunctionSignature& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const FunctionSignature& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const FunctionSignature& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature";
  }
  protected:
  explicit FunctionSignature(::google::protobuf::Arena* arena);
  FunctionSignature(::google::protobuf::Arena* arena, const FunctionSignature& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using FinalArgVariadic = FunctionSignature_FinalArgVariadic;
  using FinalArgNormal = FunctionSignature_FinalArgNormal;
  using Scalar = FunctionSignature_Scalar;
  using Aggregate = FunctionSignature_Aggregate;
  using Window = FunctionSignature_Window;
  using Description = FunctionSignature_Description;
  using Implementation = FunctionSignature_Implementation;
  using Argument = FunctionSignature_Argument;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_Argument_ValueArgument final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Argument.ValueArgument) */ {
 public:
  inline FunctionSignature_Argument_ValueArgument() : FunctionSignature_Argument_ValueArgument(nullptr) {}
  ~FunctionSignature_Argument_ValueArgument() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Argument_ValueArgument(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Argument_ValueArgument(const FunctionSignature_Argument_ValueArgument& from)
      : FunctionSignature_Argument_ValueArgument(nullptr, from) {}
  FunctionSignature_Argument_ValueArgument(FunctionSignature_Argument_ValueArgument&& from) noexcept
    : FunctionSignature_Argument_ValueArgument() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Argument_ValueArgument& operator=(const FunctionSignature_Argument_ValueArgument& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Argument_ValueArgument& operator=(FunctionSignature_Argument_ValueArgument&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Argument_ValueArgument& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionSignature_Argument_ValueArgument* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Argument_ValueArgument*>(
               &_FunctionSignature_Argument_ValueArgument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(FunctionSignature_Argument_ValueArgument& a, FunctionSignature_Argument_ValueArgument& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Argument_ValueArgument* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Argument_ValueArgument* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Argument_ValueArgument* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Argument_ValueArgument>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Argument_ValueArgument& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Argument_ValueArgument& from) {
    FunctionSignature_Argument_ValueArgument::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Argument_ValueArgument* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Argument.ValueArgument";
  }
  protected:
  explicit FunctionSignature_Argument_ValueArgument(::google::protobuf::Arena* arena);
  FunctionSignature_Argument_ValueArgument(::google::protobuf::Arena* arena, const FunctionSignature_Argument_ValueArgument& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kConstantFieldNumber = 2,
  };
  // .substrait.ParameterizedType type = 1 [json_name = "type"];
  bool has_type() const;
  void clear_type() ;
  const ::substrait::ParameterizedType& type() const;
  PROTOBUF_NODISCARD ::substrait::ParameterizedType* release_type();
  ::substrait::ParameterizedType* mutable_type();
  void set_allocated_type(::substrait::ParameterizedType* value);
  void unsafe_arena_set_allocated_type(::substrait::ParameterizedType* value);
  ::substrait::ParameterizedType* unsafe_arena_release_type();

  private:
  const ::substrait::ParameterizedType& _internal_type() const;
  ::substrait::ParameterizedType* _internal_mutable_type();

  public:
  // bool constant = 2 [json_name = "constant"];
  void clear_constant() ;
  bool constant() const;
  void set_constant(bool value);

  private:
  bool _internal_constant() const;
  void _internal_set_constant(bool value);

  public:
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Argument.ValueArgument)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::substrait::ParameterizedType* type_;
    bool constant_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_Argument_TypeArgument final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Argument.TypeArgument) */ {
 public:
  inline FunctionSignature_Argument_TypeArgument() : FunctionSignature_Argument_TypeArgument(nullptr) {}
  ~FunctionSignature_Argument_TypeArgument() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Argument_TypeArgument(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Argument_TypeArgument(const FunctionSignature_Argument_TypeArgument& from)
      : FunctionSignature_Argument_TypeArgument(nullptr, from) {}
  FunctionSignature_Argument_TypeArgument(FunctionSignature_Argument_TypeArgument&& from) noexcept
    : FunctionSignature_Argument_TypeArgument() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Argument_TypeArgument& operator=(const FunctionSignature_Argument_TypeArgument& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Argument_TypeArgument& operator=(FunctionSignature_Argument_TypeArgument&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Argument_TypeArgument& default_instance() {
    return *internal_default_instance();
  }
  static inline const FunctionSignature_Argument_TypeArgument* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Argument_TypeArgument*>(
               &_FunctionSignature_Argument_TypeArgument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(FunctionSignature_Argument_TypeArgument& a, FunctionSignature_Argument_TypeArgument& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Argument_TypeArgument* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Argument_TypeArgument* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Argument_TypeArgument* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Argument_TypeArgument>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Argument_TypeArgument& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Argument_TypeArgument& from) {
    FunctionSignature_Argument_TypeArgument::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Argument_TypeArgument* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Argument.TypeArgument";
  }
  protected:
  explicit FunctionSignature_Argument_TypeArgument(::google::protobuf::Arena* arena);
  FunctionSignature_Argument_TypeArgument(::google::protobuf::Arena* arena, const FunctionSignature_Argument_TypeArgument& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
  };
  // .substrait.ParameterizedType type = 1 [json_name = "type"];
  bool has_type() const;
  void clear_type() ;
  const ::substrait::ParameterizedType& type() const;
  PROTOBUF_NODISCARD ::substrait::ParameterizedType* release_type();
  ::substrait::ParameterizedType* mutable_type();
  void set_allocated_type(::substrait::ParameterizedType* value);
  void unsafe_arena_set_allocated_type(::substrait::ParameterizedType* value);
  ::substrait::ParameterizedType* unsafe_arena_release_type();

  private:
  const ::substrait::ParameterizedType& _internal_type() const;
  ::substrait::ParameterizedType* _internal_mutable_type();

  public:
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Argument.TypeArgument)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::substrait::ParameterizedType* type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_Argument final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Argument) */ {
 public:
  inline FunctionSignature_Argument() : FunctionSignature_Argument(nullptr) {}
  ~FunctionSignature_Argument() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Argument(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Argument(const FunctionSignature_Argument& from)
      : FunctionSignature_Argument(nullptr, from) {}
  FunctionSignature_Argument(FunctionSignature_Argument&& from) noexcept
    : FunctionSignature_Argument() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Argument& operator=(const FunctionSignature_Argument& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Argument& operator=(FunctionSignature_Argument&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Argument& default_instance() {
    return *internal_default_instance();
  }
  enum ArgumentKindCase {
    kValue = 2,
    kType = 3,
    kEnum = 4,
    ARGUMENT_KIND_NOT_SET = 0,
  };

  static inline const FunctionSignature_Argument* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Argument*>(
               &_FunctionSignature_Argument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(FunctionSignature_Argument& a, FunctionSignature_Argument& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Argument* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Argument* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Argument* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Argument>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Argument& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Argument& from) {
    FunctionSignature_Argument::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Argument* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Argument";
  }
  protected:
  explicit FunctionSignature_Argument(::google::protobuf::Arena* arena);
  FunctionSignature_Argument(::google::protobuf::Arena* arena, const FunctionSignature_Argument& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using ValueArgument = FunctionSignature_Argument_ValueArgument;
  using TypeArgument = FunctionSignature_Argument_TypeArgument;
  using EnumArgument = FunctionSignature_Argument_EnumArgument;

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
    kTypeFieldNumber = 3,
    kEnumFieldNumber = 4,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .substrait.FunctionSignature.Argument.ValueArgument value = 2 [json_name = "value"];
  bool has_value() const;
  private:
  bool _internal_has_value() const;

  public:
  void clear_value() ;
  const ::substrait::FunctionSignature_Argument_ValueArgument& value() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_Argument_ValueArgument* release_value();
  ::substrait::FunctionSignature_Argument_ValueArgument* mutable_value();
  void set_allocated_value(::substrait::FunctionSignature_Argument_ValueArgument* value);
  void unsafe_arena_set_allocated_value(::substrait::FunctionSignature_Argument_ValueArgument* value);
  ::substrait::FunctionSignature_Argument_ValueArgument* unsafe_arena_release_value();

  private:
  const ::substrait::FunctionSignature_Argument_ValueArgument& _internal_value() const;
  ::substrait::FunctionSignature_Argument_ValueArgument* _internal_mutable_value();

  public:
  // .substrait.FunctionSignature.Argument.TypeArgument type = 3 [json_name = "type"];
  bool has_type() const;
  private:
  bool _internal_has_type() const;

  public:
  void clear_type() ;
  const ::substrait::FunctionSignature_Argument_TypeArgument& type() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_Argument_TypeArgument* release_type();
  ::substrait::FunctionSignature_Argument_TypeArgument* mutable_type();
  void set_allocated_type(::substrait::FunctionSignature_Argument_TypeArgument* value);
  void unsafe_arena_set_allocated_type(::substrait::FunctionSignature_Argument_TypeArgument* value);
  ::substrait::FunctionSignature_Argument_TypeArgument* unsafe_arena_release_type();

  private:
  const ::substrait::FunctionSignature_Argument_TypeArgument& _internal_type() const;
  ::substrait::FunctionSignature_Argument_TypeArgument* _internal_mutable_type();

  public:
  // .substrait.FunctionSignature.Argument.EnumArgument enum = 4 [json_name = "enum"];
  bool has_enum_() const;
  private:
  bool _internal_has_enum_() const;

  public:
  void clear_enum_() ;
  const ::substrait::FunctionSignature_Argument_EnumArgument& enum_() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_Argument_EnumArgument* release_enum_();
  ::substrait::FunctionSignature_Argument_EnumArgument* mutable_enum_();
  void set_allocated_enum_(::substrait::FunctionSignature_Argument_EnumArgument* value);
  void unsafe_arena_set_allocated_enum_(::substrait::FunctionSignature_Argument_EnumArgument* value);
  ::substrait::FunctionSignature_Argument_EnumArgument* unsafe_arena_release_enum_();

  private:
  const ::substrait::FunctionSignature_Argument_EnumArgument& _internal_enum_() const;
  ::substrait::FunctionSignature_Argument_EnumArgument* _internal_mutable_enum_();

  public:
  void clear_argument_kind();
  ArgumentKindCase argument_kind_case() const;
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Argument)
 private:
  class _Internal;
  void set_has_value();
  void set_has_type();
  void set_has_enum_();

  inline bool has_argument_kind() const;
  inline void clear_has_argument_kind();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 3,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    union ArgumentKindUnion {
      constexpr ArgumentKindUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::substrait::FunctionSignature_Argument_ValueArgument* value_;
      ::substrait::FunctionSignature_Argument_TypeArgument* type_;
      ::substrait::FunctionSignature_Argument_EnumArgument* enum__;
    } argument_kind_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_Window final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Window) */ {
 public:
  inline FunctionSignature_Window() : FunctionSignature_Window(nullptr) {}
  ~FunctionSignature_Window() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Window(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Window(const FunctionSignature_Window& from)
      : FunctionSignature_Window(nullptr, from) {}
  FunctionSignature_Window(FunctionSignature_Window&& from) noexcept
    : FunctionSignature_Window() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Window& operator=(const FunctionSignature_Window& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Window& operator=(FunctionSignature_Window&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Window& default_instance() {
    return *internal_default_instance();
  }
  enum FinalVariableBehaviorCase {
    kVariadic = 16,
    kNormal = 17,
    FINAL_VARIABLE_BEHAVIOR_NOT_SET = 0,
  };

  static inline const FunctionSignature_Window* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Window*>(
               &_FunctionSignature_Window_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(FunctionSignature_Window& a, FunctionSignature_Window& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Window* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Window* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Window* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Window>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Window& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Window& from) {
    FunctionSignature_Window::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Window* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Window";
  }
  protected:
  explicit FunctionSignature_Window(::google::protobuf::Arena* arena);
  FunctionSignature_Window(::google::protobuf::Arena* arena, const FunctionSignature_Window& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using WindowType = FunctionSignature_Window_WindowType;
  static constexpr WindowType WINDOW_TYPE_UNSPECIFIED = FunctionSignature_Window_WindowType_WINDOW_TYPE_UNSPECIFIED;
  static constexpr WindowType WINDOW_TYPE_STREAMING = FunctionSignature_Window_WindowType_WINDOW_TYPE_STREAMING;
  static constexpr WindowType WINDOW_TYPE_PARTITION = FunctionSignature_Window_WindowType_WINDOW_TYPE_PARTITION;
  static inline bool WindowType_IsValid(int value) {
    return FunctionSignature_Window_WindowType_IsValid(value);
  }
  static constexpr WindowType WindowType_MIN = FunctionSignature_Window_WindowType_WindowType_MIN;
  static constexpr WindowType WindowType_MAX = FunctionSignature_Window_WindowType_WindowType_MAX;
  static constexpr int WindowType_ARRAYSIZE = FunctionSignature_Window_WindowType_WindowType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* WindowType_descriptor() {
    return FunctionSignature_Window_WindowType_descriptor();
  }
  template <typename T>
  static inline const std::string& WindowType_Name(T value) {
    return FunctionSignature_Window_WindowType_Name(value);
  }
  static inline bool WindowType_Parse(absl::string_view name, WindowType* value) {
    return FunctionSignature_Window_WindowType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kArgumentsFieldNumber = 2,
    kNameFieldNumber = 3,
    kImplementationsFieldNumber = 15,
    kDescriptionFieldNumber = 4,
    kIntermediateTypeFieldNumber = 9,
    kOutputTypeFieldNumber = 10,
    kDeterministicFieldNumber = 7,
    kSessionDependentFieldNumber = 8,
    kOrderedFieldNumber = 11,
    kWindowTypeFieldNumber = 14,
    kMaxSetFieldNumber = 12,
    kVariadicFieldNumber = 16,
    kNormalFieldNumber = 17,
  };
  // repeated .substrait.FunctionSignature.Argument arguments = 2 [json_name = "arguments"];
  int arguments_size() const;
  private:
  int _internal_arguments_size() const;

  public:
  void clear_arguments() ;
  ::substrait::FunctionSignature_Argument* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
      mutable_arguments();
  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>& _internal_arguments() const;
  ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>* _internal_mutable_arguments();
  public:
  const ::substrait::FunctionSignature_Argument& arguments(int index) const;
  ::substrait::FunctionSignature_Argument* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
      arguments() const;
  // repeated string name = 3 [json_name = "name"];
  int name_size() const;
  private:
  int _internal_name_size() const;

  public:
  void clear_name() ;
  const std::string& name(int index) const;
  std::string* mutable_name(int index);
  void set_name(int index, const std::string& value);
  void set_name(int index, std::string&& value);
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, std::size_t size);
  void set_name(int index, absl::string_view value);
  std::string* add_name();
  void add_name(const std::string& value);
  void add_name(std::string&& value);
  void add_name(const char* value);
  void add_name(const char* value, std::size_t size);
  void add_name(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_name();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_name();

  public:
  // repeated .substrait.FunctionSignature.Implementation implementations = 15 [json_name = "implementations"];
  int implementations_size() const;
  private:
  int _internal_implementations_size() const;

  public:
  void clear_implementations() ;
  ::substrait::FunctionSignature_Implementation* mutable_implementations(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
      mutable_implementations();
  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>& _internal_implementations() const;
  ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>* _internal_mutable_implementations();
  public:
  const ::substrait::FunctionSignature_Implementation& implementations(int index) const;
  ::substrait::FunctionSignature_Implementation* add_implementations();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
      implementations() const;
  // .substrait.FunctionSignature.Description description = 4 [json_name = "description"];
  bool has_description() const;
  void clear_description() ;
  const ::substrait::FunctionSignature_Description& description() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_Description* release_description();
  ::substrait::FunctionSignature_Description* mutable_description();
  void set_allocated_description(::substrait::FunctionSignature_Description* value);
  void unsafe_arena_set_allocated_description(::substrait::FunctionSignature_Description* value);
  ::substrait::FunctionSignature_Description* unsafe_arena_release_description();

  private:
  const ::substrait::FunctionSignature_Description& _internal_description() const;
  ::substrait::FunctionSignature_Description* _internal_mutable_description();

  public:
  // .substrait.DerivationExpression intermediate_type = 9 [json_name = "intermediateType"];
  bool has_intermediate_type() const;
  void clear_intermediate_type() ;
  const ::substrait::DerivationExpression& intermediate_type() const;
  PROTOBUF_NODISCARD ::substrait::DerivationExpression* release_intermediate_type();
  ::substrait::DerivationExpression* mutable_intermediate_type();
  void set_allocated_intermediate_type(::substrait::DerivationExpression* value);
  void unsafe_arena_set_allocated_intermediate_type(::substrait::DerivationExpression* value);
  ::substrait::DerivationExpression* unsafe_arena_release_intermediate_type();

  private:
  const ::substrait::DerivationExpression& _internal_intermediate_type() const;
  ::substrait::DerivationExpression* _internal_mutable_intermediate_type();

  public:
  // .substrait.DerivationExpression output_type = 10 [json_name = "outputType"];
  bool has_output_type() const;
  void clear_output_type() ;
  const ::substrait::DerivationExpression& output_type() const;
  PROTOBUF_NODISCARD ::substrait::DerivationExpression* release_output_type();
  ::substrait::DerivationExpression* mutable_output_type();
  void set_allocated_output_type(::substrait::DerivationExpression* value);
  void unsafe_arena_set_allocated_output_type(::substrait::DerivationExpression* value);
  ::substrait::DerivationExpression* unsafe_arena_release_output_type();

  private:
  const ::substrait::DerivationExpression& _internal_output_type() const;
  ::substrait::DerivationExpression* _internal_mutable_output_type();

  public:
  // bool deterministic = 7 [json_name = "deterministic"];
  void clear_deterministic() ;
  bool deterministic() const;
  void set_deterministic(bool value);

  private:
  bool _internal_deterministic() const;
  void _internal_set_deterministic(bool value);

  public:
  // bool session_dependent = 8 [json_name = "sessionDependent"];
  void clear_session_dependent() ;
  bool session_dependent() const;
  void set_session_dependent(bool value);

  private:
  bool _internal_session_dependent() const;
  void _internal_set_session_dependent(bool value);

  public:
  // bool ordered = 11 [json_name = "ordered"];
  void clear_ordered() ;
  bool ordered() const;
  void set_ordered(bool value);

  private:
  bool _internal_ordered() const;
  void _internal_set_ordered(bool value);

  public:
  // .substrait.FunctionSignature.Window.WindowType window_type = 14 [json_name = "windowType"];
  void clear_window_type() ;
  ::substrait::FunctionSignature_Window_WindowType window_type() const;
  void set_window_type(::substrait::FunctionSignature_Window_WindowType value);

  private:
  ::substrait::FunctionSignature_Window_WindowType _internal_window_type() const;
  void _internal_set_window_type(::substrait::FunctionSignature_Window_WindowType value);

  public:
  // uint64 max_set = 12 [json_name = "maxSet"];
  void clear_max_set() ;
  ::uint64_t max_set() const;
  void set_max_set(::uint64_t value);

  private:
  ::uint64_t _internal_max_set() const;
  void _internal_set_max_set(::uint64_t value);

  public:
  // .substrait.FunctionSignature.FinalArgVariadic variadic = 16 [json_name = "variadic"];
  bool has_variadic() const;
  private:
  bool _internal_has_variadic() const;

  public:
  void clear_variadic() ;
  const ::substrait::FunctionSignature_FinalArgVariadic& variadic() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_FinalArgVariadic* release_variadic();
  ::substrait::FunctionSignature_FinalArgVariadic* mutable_variadic();
  void set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value);
  void unsafe_arena_set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value);
  ::substrait::FunctionSignature_FinalArgVariadic* unsafe_arena_release_variadic();

  private:
  const ::substrait::FunctionSignature_FinalArgVariadic& _internal_variadic() const;
  ::substrait::FunctionSignature_FinalArgVariadic* _internal_mutable_variadic();

  public:
  // .substrait.FunctionSignature.FinalArgNormal normal = 17 [json_name = "normal"];
  bool has_normal() const;
  private:
  bool _internal_has_normal() const;

  public:
  void clear_normal() ;
  const ::substrait::FunctionSignature_FinalArgNormal& normal() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_FinalArgNormal* release_normal();
  ::substrait::FunctionSignature_FinalArgNormal* mutable_normal();
  void set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value);
  void unsafe_arena_set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value);
  ::substrait::FunctionSignature_FinalArgNormal* unsafe_arena_release_normal();

  private:
  const ::substrait::FunctionSignature_FinalArgNormal& _internal_normal() const;
  ::substrait::FunctionSignature_FinalArgNormal* _internal_mutable_normal();

  public:
  void clear_final_variable_behavior();
  FinalVariableBehaviorCase final_variable_behavior_case() const;
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Window)
 private:
  class _Internal;
  void set_has_variadic();
  void set_has_normal();

  inline bool has_final_variable_behavior() const;
  inline void clear_has_final_variable_behavior();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 7,
      55, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument > arguments_;
    ::google::protobuf::RepeatedPtrField<std::string> name_;
    ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation > implementations_;
    ::substrait::FunctionSignature_Description* description_;
    ::substrait::DerivationExpression* intermediate_type_;
    ::substrait::DerivationExpression* output_type_;
    bool deterministic_;
    bool session_dependent_;
    bool ordered_;
    int window_type_;
    ::uint64_t max_set_;
    union FinalVariableBehaviorUnion {
      constexpr FinalVariableBehaviorUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::substrait::FunctionSignature_FinalArgVariadic* variadic_;
      ::substrait::FunctionSignature_FinalArgNormal* normal_;
    } final_variable_behavior_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_Scalar final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Scalar) */ {
 public:
  inline FunctionSignature_Scalar() : FunctionSignature_Scalar(nullptr) {}
  ~FunctionSignature_Scalar() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Scalar(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Scalar(const FunctionSignature_Scalar& from)
      : FunctionSignature_Scalar(nullptr, from) {}
  FunctionSignature_Scalar(FunctionSignature_Scalar&& from) noexcept
    : FunctionSignature_Scalar() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Scalar& operator=(const FunctionSignature_Scalar& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Scalar& operator=(FunctionSignature_Scalar&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Scalar& default_instance() {
    return *internal_default_instance();
  }
  enum FinalVariableBehaviorCase {
    kVariadic = 10,
    kNormal = 11,
    FINAL_VARIABLE_BEHAVIOR_NOT_SET = 0,
  };

  static inline const FunctionSignature_Scalar* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Scalar*>(
               &_FunctionSignature_Scalar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FunctionSignature_Scalar& a, FunctionSignature_Scalar& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Scalar* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Scalar* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Scalar* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Scalar>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Scalar& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Scalar& from) {
    FunctionSignature_Scalar::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Scalar* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Scalar";
  }
  protected:
  explicit FunctionSignature_Scalar(::google::protobuf::Arena* arena);
  FunctionSignature_Scalar(::google::protobuf::Arena* arena, const FunctionSignature_Scalar& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgumentsFieldNumber = 2,
    kNameFieldNumber = 3,
    kImplementationsFieldNumber = 12,
    kDescriptionFieldNumber = 4,
    kOutputTypeFieldNumber = 9,
    kDeterministicFieldNumber = 7,
    kSessionDependentFieldNumber = 8,
    kVariadicFieldNumber = 10,
    kNormalFieldNumber = 11,
  };
  // repeated .substrait.FunctionSignature.Argument arguments = 2 [json_name = "arguments"];
  int arguments_size() const;
  private:
  int _internal_arguments_size() const;

  public:
  void clear_arguments() ;
  ::substrait::FunctionSignature_Argument* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
      mutable_arguments();
  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>& _internal_arguments() const;
  ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>* _internal_mutable_arguments();
  public:
  const ::substrait::FunctionSignature_Argument& arguments(int index) const;
  ::substrait::FunctionSignature_Argument* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
      arguments() const;
  // repeated string name = 3 [json_name = "name"];
  int name_size() const;
  private:
  int _internal_name_size() const;

  public:
  void clear_name() ;
  const std::string& name(int index) const;
  std::string* mutable_name(int index);
  void set_name(int index, const std::string& value);
  void set_name(int index, std::string&& value);
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, std::size_t size);
  void set_name(int index, absl::string_view value);
  std::string* add_name();
  void add_name(const std::string& value);
  void add_name(std::string&& value);
  void add_name(const char* value);
  void add_name(const char* value, std::size_t size);
  void add_name(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_name();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_name() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_name();

  public:
  // repeated .substrait.FunctionSignature.Implementation implementations = 12 [json_name = "implementations"];
  int implementations_size() const;
  private:
  int _internal_implementations_size() const;

  public:
  void clear_implementations() ;
  ::substrait::FunctionSignature_Implementation* mutable_implementations(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
      mutable_implementations();
  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>& _internal_implementations() const;
  ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>* _internal_mutable_implementations();
  public:
  const ::substrait::FunctionSignature_Implementation& implementations(int index) const;
  ::substrait::FunctionSignature_Implementation* add_implementations();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
      implementations() const;
  // .substrait.FunctionSignature.Description description = 4 [json_name = "description"];
  bool has_description() const;
  void clear_description() ;
  const ::substrait::FunctionSignature_Description& description() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_Description* release_description();
  ::substrait::FunctionSignature_Description* mutable_description();
  void set_allocated_description(::substrait::FunctionSignature_Description* value);
  void unsafe_arena_set_allocated_description(::substrait::FunctionSignature_Description* value);
  ::substrait::FunctionSignature_Description* unsafe_arena_release_description();

  private:
  const ::substrait::FunctionSignature_Description& _internal_description() const;
  ::substrait::FunctionSignature_Description* _internal_mutable_description();

  public:
  // .substrait.DerivationExpression output_type = 9 [json_name = "outputType"];
  bool has_output_type() const;
  void clear_output_type() ;
  const ::substrait::DerivationExpression& output_type() const;
  PROTOBUF_NODISCARD ::substrait::DerivationExpression* release_output_type();
  ::substrait::DerivationExpression* mutable_output_type();
  void set_allocated_output_type(::substrait::DerivationExpression* value);
  void unsafe_arena_set_allocated_output_type(::substrait::DerivationExpression* value);
  ::substrait::DerivationExpression* unsafe_arena_release_output_type();

  private:
  const ::substrait::DerivationExpression& _internal_output_type() const;
  ::substrait::DerivationExpression* _internal_mutable_output_type();

  public:
  // bool deterministic = 7 [json_name = "deterministic"];
  void clear_deterministic() ;
  bool deterministic() const;
  void set_deterministic(bool value);

  private:
  bool _internal_deterministic() const;
  void _internal_set_deterministic(bool value);

  public:
  // bool session_dependent = 8 [json_name = "sessionDependent"];
  void clear_session_dependent() ;
  bool session_dependent() const;
  void set_session_dependent(bool value);

  private:
  bool _internal_session_dependent() const;
  void _internal_set_session_dependent(bool value);

  public:
  // .substrait.FunctionSignature.FinalArgVariadic variadic = 10 [json_name = "variadic"];
  bool has_variadic() const;
  private:
  bool _internal_has_variadic() const;

  public:
  void clear_variadic() ;
  const ::substrait::FunctionSignature_FinalArgVariadic& variadic() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_FinalArgVariadic* release_variadic();
  ::substrait::FunctionSignature_FinalArgVariadic* mutable_variadic();
  void set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value);
  void unsafe_arena_set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value);
  ::substrait::FunctionSignature_FinalArgVariadic* unsafe_arena_release_variadic();

  private:
  const ::substrait::FunctionSignature_FinalArgVariadic& _internal_variadic() const;
  ::substrait::FunctionSignature_FinalArgVariadic* _internal_mutable_variadic();

  public:
  // .substrait.FunctionSignature.FinalArgNormal normal = 11 [json_name = "normal"];
  bool has_normal() const;
  private:
  bool _internal_has_normal() const;

  public:
  void clear_normal() ;
  const ::substrait::FunctionSignature_FinalArgNormal& normal() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_FinalArgNormal* release_normal();
  ::substrait::FunctionSignature_FinalArgNormal* mutable_normal();
  void set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value);
  void unsafe_arena_set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value);
  ::substrait::FunctionSignature_FinalArgNormal* unsafe_arena_release_normal();

  private:
  const ::substrait::FunctionSignature_FinalArgNormal& _internal_normal() const;
  ::substrait::FunctionSignature_FinalArgNormal* _internal_mutable_normal();

  public:
  void clear_final_variable_behavior();
  FinalVariableBehaviorCase final_variable_behavior_case() const;
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Scalar)
 private:
  class _Internal;
  void set_has_variadic();
  void set_has_normal();

  inline bool has_final_variable_behavior() const;
  inline void clear_has_final_variable_behavior();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 6,
      55, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument > arguments_;
    ::google::protobuf::RepeatedPtrField<std::string> name_;
    ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation > implementations_;
    ::substrait::FunctionSignature_Description* description_;
    ::substrait::DerivationExpression* output_type_;
    bool deterministic_;
    bool session_dependent_;
    union FinalVariableBehaviorUnion {
      constexpr FinalVariableBehaviorUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::substrait::FunctionSignature_FinalArgVariadic* variadic_;
      ::substrait::FunctionSignature_FinalArgNormal* normal_;
    } final_variable_behavior_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};// -------------------------------------------------------------------

class FunctionSignature_Aggregate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Aggregate) */ {
 public:
  inline FunctionSignature_Aggregate() : FunctionSignature_Aggregate(nullptr) {}
  ~FunctionSignature_Aggregate() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FunctionSignature_Aggregate(::google::protobuf::internal::ConstantInitialized);

  inline FunctionSignature_Aggregate(const FunctionSignature_Aggregate& from)
      : FunctionSignature_Aggregate(nullptr, from) {}
  FunctionSignature_Aggregate(FunctionSignature_Aggregate&& from) noexcept
    : FunctionSignature_Aggregate() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Aggregate& operator=(const FunctionSignature_Aggregate& from) {
    CopyFrom(from);
    return *this;
  }
  inline FunctionSignature_Aggregate& operator=(FunctionSignature_Aggregate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FunctionSignature_Aggregate& default_instance() {
    return *internal_default_instance();
  }
  enum FinalVariableBehaviorCase {
    kVariadic = 10,
    kNormal = 11,
    FINAL_VARIABLE_BEHAVIOR_NOT_SET = 0,
  };

  static inline const FunctionSignature_Aggregate* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Aggregate*>(
               &_FunctionSignature_Aggregate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FunctionSignature_Aggregate& a, FunctionSignature_Aggregate& b) {
    a.Swap(&b);
  }
  inline void Swap(FunctionSignature_Aggregate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FunctionSignature_Aggregate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FunctionSignature_Aggregate* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FunctionSignature_Aggregate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FunctionSignature_Aggregate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FunctionSignature_Aggregate& from) {
    FunctionSignature_Aggregate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FunctionSignature_Aggregate* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "substrait.FunctionSignature.Aggregate";
  }
  protected:
  explicit FunctionSignature_Aggregate(::google::protobuf::Arena* arena);
  FunctionSignature_Aggregate(::google::protobuf::Arena* arena, const FunctionSignature_Aggregate& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArgumentsFieldNumber = 2,
    kImplementationsFieldNumber = 15,
    kNameFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kOutputTypeFieldNumber = 9,
    kIntermediateTypeFieldNumber = 13,
    kMaxSetFieldNumber = 12,
    kDeterministicFieldNumber = 7,
    kSessionDependentFieldNumber = 8,
    kOrderedFieldNumber = 14,
    kVariadicFieldNumber = 10,
    kNormalFieldNumber = 11,
  };
  // repeated .substrait.FunctionSignature.Argument arguments = 2 [json_name = "arguments"];
  int arguments_size() const;
  private:
  int _internal_arguments_size() const;

  public:
  void clear_arguments() ;
  ::substrait::FunctionSignature_Argument* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
      mutable_arguments();
  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>& _internal_arguments() const;
  ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>* _internal_mutable_arguments();
  public:
  const ::substrait::FunctionSignature_Argument& arguments(int index) const;
  ::substrait::FunctionSignature_Argument* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
      arguments() const;
  // repeated .substrait.FunctionSignature.Implementation implementations = 15 [json_name = "implementations"];
  int implementations_size() const;
  private:
  int _internal_implementations_size() const;

  public:
  void clear_implementations() ;
  ::substrait::FunctionSignature_Implementation* mutable_implementations(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
      mutable_implementations();
  private:
  const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>& _internal_implementations() const;
  ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>* _internal_mutable_implementations();
  public:
  const ::substrait::FunctionSignature_Implementation& implementations(int index) const;
  ::substrait::FunctionSignature_Implementation* add_implementations();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
      implementations() const;
  // string name = 3 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .substrait.FunctionSignature.Description description = 4 [json_name = "description"];
  bool has_description() const;
  void clear_description() ;
  const ::substrait::FunctionSignature_Description& description() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_Description* release_description();
  ::substrait::FunctionSignature_Description* mutable_description();
  void set_allocated_description(::substrait::FunctionSignature_Description* value);
  void unsafe_arena_set_allocated_description(::substrait::FunctionSignature_Description* value);
  ::substrait::FunctionSignature_Description* unsafe_arena_release_description();

  private:
  const ::substrait::FunctionSignature_Description& _internal_description() const;
  ::substrait::FunctionSignature_Description* _internal_mutable_description();

  public:
  // .substrait.DerivationExpression output_type = 9 [json_name = "outputType"];
  bool has_output_type() const;
  void clear_output_type() ;
  const ::substrait::DerivationExpression& output_type() const;
  PROTOBUF_NODISCARD ::substrait::DerivationExpression* release_output_type();
  ::substrait::DerivationExpression* mutable_output_type();
  void set_allocated_output_type(::substrait::DerivationExpression* value);
  void unsafe_arena_set_allocated_output_type(::substrait::DerivationExpression* value);
  ::substrait::DerivationExpression* unsafe_arena_release_output_type();

  private:
  const ::substrait::DerivationExpression& _internal_output_type() const;
  ::substrait::DerivationExpression* _internal_mutable_output_type();

  public:
  // .substrait.Type intermediate_type = 13 [json_name = "intermediateType"];
  bool has_intermediate_type() const;
  void clear_intermediate_type() ;
  const ::substrait::Type& intermediate_type() const;
  PROTOBUF_NODISCARD ::substrait::Type* release_intermediate_type();
  ::substrait::Type* mutable_intermediate_type();
  void set_allocated_intermediate_type(::substrait::Type* value);
  void unsafe_arena_set_allocated_intermediate_type(::substrait::Type* value);
  ::substrait::Type* unsafe_arena_release_intermediate_type();

  private:
  const ::substrait::Type& _internal_intermediate_type() const;
  ::substrait::Type* _internal_mutable_intermediate_type();

  public:
  // uint64 max_set = 12 [json_name = "maxSet"];
  void clear_max_set() ;
  ::uint64_t max_set() const;
  void set_max_set(::uint64_t value);

  private:
  ::uint64_t _internal_max_set() const;
  void _internal_set_max_set(::uint64_t value);

  public:
  // bool deterministic = 7 [json_name = "deterministic"];
  void clear_deterministic() ;
  bool deterministic() const;
  void set_deterministic(bool value);

  private:
  bool _internal_deterministic() const;
  void _internal_set_deterministic(bool value);

  public:
  // bool session_dependent = 8 [json_name = "sessionDependent"];
  void clear_session_dependent() ;
  bool session_dependent() const;
  void set_session_dependent(bool value);

  private:
  bool _internal_session_dependent() const;
  void _internal_set_session_dependent(bool value);

  public:
  // bool ordered = 14 [json_name = "ordered"];
  void clear_ordered() ;
  bool ordered() const;
  void set_ordered(bool value);

  private:
  bool _internal_ordered() const;
  void _internal_set_ordered(bool value);

  public:
  // .substrait.FunctionSignature.FinalArgVariadic variadic = 10 [json_name = "variadic"];
  bool has_variadic() const;
  private:
  bool _internal_has_variadic() const;

  public:
  void clear_variadic() ;
  const ::substrait::FunctionSignature_FinalArgVariadic& variadic() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_FinalArgVariadic* release_variadic();
  ::substrait::FunctionSignature_FinalArgVariadic* mutable_variadic();
  void set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value);
  void unsafe_arena_set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value);
  ::substrait::FunctionSignature_FinalArgVariadic* unsafe_arena_release_variadic();

  private:
  const ::substrait::FunctionSignature_FinalArgVariadic& _internal_variadic() const;
  ::substrait::FunctionSignature_FinalArgVariadic* _internal_mutable_variadic();

  public:
  // .substrait.FunctionSignature.FinalArgNormal normal = 11 [json_name = "normal"];
  bool has_normal() const;
  private:
  bool _internal_has_normal() const;

  public:
  void clear_normal() ;
  const ::substrait::FunctionSignature_FinalArgNormal& normal() const;
  PROTOBUF_NODISCARD ::substrait::FunctionSignature_FinalArgNormal* release_normal();
  ::substrait::FunctionSignature_FinalArgNormal* mutable_normal();
  void set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value);
  void unsafe_arena_set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value);
  ::substrait::FunctionSignature_FinalArgNormal* unsafe_arena_release_normal();

  private:
  const ::substrait::FunctionSignature_FinalArgNormal& _internal_normal() const;
  ::substrait::FunctionSignature_FinalArgNormal* _internal_mutable_normal();

  public:
  void clear_final_variable_behavior();
  FinalVariableBehaviorCase final_variable_behavior_case() const;
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Aggregate)
 private:
  class _Internal;
  void set_has_variadic();
  void set_has_normal();

  inline bool has_final_variable_behavior() const;
  inline void clear_has_final_variable_behavior();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 7,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument > arguments_;
    ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation > implementations_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::substrait::FunctionSignature_Description* description_;
    ::substrait::DerivationExpression* output_type_;
    ::substrait::Type* intermediate_type_;
    ::uint64_t max_set_;
    bool deterministic_;
    bool session_dependent_;
    bool ordered_;
    union FinalVariableBehaviorUnion {
      constexpr FinalVariableBehaviorUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::substrait::FunctionSignature_FinalArgVariadic* variadic_;
      ::substrait::FunctionSignature_FinalArgNormal* normal_;
    } final_variable_behavior_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_substrait_2ffunction_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FunctionSignature_FinalArgVariadic

// int64 min_args = 1 [json_name = "minArgs"];
inline void FunctionSignature_FinalArgVariadic::clear_min_args() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.min_args_ = ::int64_t{0};
}
inline ::int64_t FunctionSignature_FinalArgVariadic::min_args() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.FinalArgVariadic.min_args)
  return _internal_min_args();
}
inline void FunctionSignature_FinalArgVariadic::set_min_args(::int64_t value) {
  _internal_set_min_args(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.FinalArgVariadic.min_args)
}
inline ::int64_t FunctionSignature_FinalArgVariadic::_internal_min_args() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.min_args_;
}
inline void FunctionSignature_FinalArgVariadic::_internal_set_min_args(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.min_args_ = value;
}

// int64 max_args = 2 [json_name = "maxArgs"];
inline void FunctionSignature_FinalArgVariadic::clear_max_args() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_args_ = ::int64_t{0};
}
inline ::int64_t FunctionSignature_FinalArgVariadic::max_args() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.FinalArgVariadic.max_args)
  return _internal_max_args();
}
inline void FunctionSignature_FinalArgVariadic::set_max_args(::int64_t value) {
  _internal_set_max_args(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.FinalArgVariadic.max_args)
}
inline ::int64_t FunctionSignature_FinalArgVariadic::_internal_max_args() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_args_;
}
inline void FunctionSignature_FinalArgVariadic::_internal_set_max_args(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_args_ = value;
}

// .substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency consistency = 3 [json_name = "consistency"];
inline void FunctionSignature_FinalArgVariadic::clear_consistency() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.consistency_ = 0;
}
inline ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic::consistency() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.FinalArgVariadic.consistency)
  return _internal_consistency();
}
inline void FunctionSignature_FinalArgVariadic::set_consistency(::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency value) {
  _internal_set_consistency(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.FinalArgVariadic.consistency)
}
inline ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic::_internal_consistency() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency>(_impl_.consistency_);
}
inline void FunctionSignature_FinalArgVariadic::_internal_set_consistency(::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.consistency_ = value;
}

// -------------------------------------------------------------------

// FunctionSignature_FinalArgNormal

// -------------------------------------------------------------------

// FunctionSignature_Scalar

// repeated .substrait.FunctionSignature.Argument arguments = 2 [json_name = "arguments"];
inline int FunctionSignature_Scalar::_internal_arguments_size() const {
  return _internal_arguments().size();
}
inline int FunctionSignature_Scalar::arguments_size() const {
  return _internal_arguments_size();
}
inline void FunctionSignature_Scalar::clear_arguments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arguments_.Clear();
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Scalar::mutable_arguments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.arguments)
  return _internal_mutable_arguments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>* FunctionSignature_Scalar::mutable_arguments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Scalar.arguments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_arguments();
}
inline const ::substrait::FunctionSignature_Argument& FunctionSignature_Scalar::arguments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.arguments)
  return _internal_arguments().Get(index);
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Scalar::add_arguments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::substrait::FunctionSignature_Argument* _add = _internal_mutable_arguments()->Add();
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Scalar.arguments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>& FunctionSignature_Scalar::arguments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Scalar.arguments)
  return _internal_arguments();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>&
FunctionSignature_Scalar::_internal_arguments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arguments_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>*
FunctionSignature_Scalar::_internal_mutable_arguments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.arguments_;
}

// repeated string name = 3 [json_name = "name"];
inline int FunctionSignature_Scalar::_internal_name_size() const {
  return _internal_name().size();
}
inline int FunctionSignature_Scalar::name_size() const {
  return _internal_name_size();
}
inline void FunctionSignature_Scalar::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.Clear();
}
inline std::string* FunctionSignature_Scalar::add_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:substrait.FunctionSignature.Scalar.name)
  return _s;
}
inline const std::string& FunctionSignature_Scalar::name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.name)
  return _internal_name().Get(index);
}
inline std::string* FunctionSignature_Scalar::mutable_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.name)
  return _internal_mutable_name()->Mutable(index);
}
inline void FunctionSignature_Scalar::set_name(int index, const std::string& value) {
  _internal_mutable_name()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::set_name(int index, std::string&& value) {
  _internal_mutable_name()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::set_name(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_name()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::set_name(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_name()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::set_name(int index, absl::string_view value) {
  _internal_mutable_name()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::add_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::add_name(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::add_name(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::add_name(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::add_name(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:substrait.FunctionSignature.Scalar.name)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionSignature_Scalar::name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Scalar.name)
  return _internal_name();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionSignature_Scalar::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Scalar.name)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_name();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionSignature_Scalar::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionSignature_Scalar::_internal_mutable_name() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.name_;
}

// .substrait.FunctionSignature.Description description = 4 [json_name = "description"];
inline bool FunctionSignature_Scalar::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.description_ != nullptr);
  return value;
}
inline void FunctionSignature_Scalar::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.description_ != nullptr) _impl_.description_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Scalar::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::FunctionSignature_Description* p = _impl_.description_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::FunctionSignature_Description&>(::substrait::_FunctionSignature_Description_default_instance_);
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Scalar::description() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.description)
  return _internal_description();
}
inline void FunctionSignature_Scalar::unsafe_arena_set_allocated_description(::substrait::FunctionSignature_Description* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.description_);
  }
  _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Scalar.description)
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Scalar::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::FunctionSignature_Description* released = _impl_.description_;
  _impl_.description_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Scalar::unsafe_arena_release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Scalar.description)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::FunctionSignature_Description* temp = _impl_.description_;
  _impl_.description_ = nullptr;
  return temp;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Scalar::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.description_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::FunctionSignature_Description>(GetArena());
    _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(p);
  }
  return _impl_.description_;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Scalar::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_Description* _msg = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.description)
  return _msg;
}
inline void FunctionSignature_Scalar::set_allocated_description(::substrait::FunctionSignature_Description* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::substrait::FunctionSignature_Description*>(_impl_.description_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::substrait::FunctionSignature_Description*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Scalar.description)
}

// bool deterministic = 7 [json_name = "deterministic"];
inline void FunctionSignature_Scalar::clear_deterministic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.deterministic_ = false;
}
inline bool FunctionSignature_Scalar::deterministic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.deterministic)
  return _internal_deterministic();
}
inline void FunctionSignature_Scalar::set_deterministic(bool value) {
  _internal_set_deterministic(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Scalar.deterministic)
}
inline bool FunctionSignature_Scalar::_internal_deterministic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.deterministic_;
}
inline void FunctionSignature_Scalar::_internal_set_deterministic(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.deterministic_ = value;
}

// bool session_dependent = 8 [json_name = "sessionDependent"];
inline void FunctionSignature_Scalar::clear_session_dependent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.session_dependent_ = false;
}
inline bool FunctionSignature_Scalar::session_dependent() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.session_dependent)
  return _internal_session_dependent();
}
inline void FunctionSignature_Scalar::set_session_dependent(bool value) {
  _internal_set_session_dependent(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Scalar.session_dependent)
}
inline bool FunctionSignature_Scalar::_internal_session_dependent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.session_dependent_;
}
inline void FunctionSignature_Scalar::_internal_set_session_dependent(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.session_dependent_ = value;
}

// .substrait.DerivationExpression output_type = 9 [json_name = "outputType"];
inline bool FunctionSignature_Scalar::has_output_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.output_type_ != nullptr);
  return value;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Scalar::_internal_output_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::DerivationExpression* p = _impl_.output_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::DerivationExpression&>(::substrait::_DerivationExpression_default_instance_);
}
inline const ::substrait::DerivationExpression& FunctionSignature_Scalar::output_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.output_type)
  return _internal_output_type();
}
inline void FunctionSignature_Scalar::unsafe_arena_set_allocated_output_type(::substrait::DerivationExpression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_type_);
  }
  _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Scalar.output_type)
}
inline ::substrait::DerivationExpression* FunctionSignature_Scalar::release_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::substrait::DerivationExpression* released = _impl_.output_type_;
  _impl_.output_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::DerivationExpression* FunctionSignature_Scalar::unsafe_arena_release_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Scalar.output_type)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::substrait::DerivationExpression* temp = _impl_.output_type_;
  _impl_.output_type_ = nullptr;
  return temp;
}
inline ::substrait::DerivationExpression* FunctionSignature_Scalar::_internal_mutable_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.output_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::DerivationExpression>(GetArena());
    _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(p);
  }
  return _impl_.output_type_;
}
inline ::substrait::DerivationExpression* FunctionSignature_Scalar::mutable_output_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::DerivationExpression* _msg = _internal_mutable_output_type();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.output_type)
  return _msg;
}
inline void FunctionSignature_Scalar::set_allocated_output_type(::substrait::DerivationExpression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Scalar.output_type)
}

// .substrait.FunctionSignature.FinalArgVariadic variadic = 10 [json_name = "variadic"];
inline bool FunctionSignature_Scalar::has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline bool FunctionSignature_Scalar::_internal_has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline void FunctionSignature_Scalar::set_has_variadic() {
  _impl_._oneof_case_[0] = kVariadic;
}
inline void FunctionSignature_Scalar::clear_variadic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (final_variable_behavior_case() == kVariadic) {
    if (GetArena() == nullptr) {
      delete _impl_.final_variable_behavior_.variadic_;
    }
    clear_has_final_variable_behavior();
  }
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Scalar::release_variadic() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Scalar.variadic)
  if (final_variable_behavior_case() == kVariadic) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.variadic_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.final_variable_behavior_.variadic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Scalar::_internal_variadic() const {
  return final_variable_behavior_case() == kVariadic ? *_impl_.final_variable_behavior_.variadic_ : reinterpret_cast<::substrait::FunctionSignature_FinalArgVariadic&>(::substrait::_FunctionSignature_FinalArgVariadic_default_instance_);
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Scalar::variadic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.variadic)
  return _internal_variadic();
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Scalar::unsafe_arena_release_variadic() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Scalar.variadic)
  if (final_variable_behavior_case() == kVariadic) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.variadic_;
    _impl_.final_variable_behavior_.variadic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Scalar::unsafe_arena_set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_final_variable_behavior();
  if (value) {
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Scalar.variadic)
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Scalar::_internal_mutable_variadic() {
  if (final_variable_behavior_case() != kVariadic) {
    clear_final_variable_behavior();
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = CreateMaybeMessage<::substrait::FunctionSignature_FinalArgVariadic>(GetArena());
  }
  return _impl_.final_variable_behavior_.variadic_;
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Scalar::mutable_variadic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_FinalArgVariadic* _msg = _internal_mutable_variadic();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.variadic)
  return _msg;
}

// .substrait.FunctionSignature.FinalArgNormal normal = 11 [json_name = "normal"];
inline bool FunctionSignature_Scalar::has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline bool FunctionSignature_Scalar::_internal_has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline void FunctionSignature_Scalar::set_has_normal() {
  _impl_._oneof_case_[0] = kNormal;
}
inline void FunctionSignature_Scalar::clear_normal() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (final_variable_behavior_case() == kNormal) {
    if (GetArena() == nullptr) {
      delete _impl_.final_variable_behavior_.normal_;
    }
    clear_has_final_variable_behavior();
  }
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Scalar::release_normal() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Scalar.normal)
  if (final_variable_behavior_case() == kNormal) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.normal_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.final_variable_behavior_.normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Scalar::_internal_normal() const {
  return final_variable_behavior_case() == kNormal ? *_impl_.final_variable_behavior_.normal_ : reinterpret_cast<::substrait::FunctionSignature_FinalArgNormal&>(::substrait::_FunctionSignature_FinalArgNormal_default_instance_);
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Scalar::normal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.normal)
  return _internal_normal();
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Scalar::unsafe_arena_release_normal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Scalar.normal)
  if (final_variable_behavior_case() == kNormal) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.normal_;
    _impl_.final_variable_behavior_.normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Scalar::unsafe_arena_set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_final_variable_behavior();
  if (value) {
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Scalar.normal)
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Scalar::_internal_mutable_normal() {
  if (final_variable_behavior_case() != kNormal) {
    clear_final_variable_behavior();
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = CreateMaybeMessage<::substrait::FunctionSignature_FinalArgNormal>(GetArena());
  }
  return _impl_.final_variable_behavior_.normal_;
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Scalar::mutable_normal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_FinalArgNormal* _msg = _internal_mutable_normal();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.normal)
  return _msg;
}

// repeated .substrait.FunctionSignature.Implementation implementations = 12 [json_name = "implementations"];
inline int FunctionSignature_Scalar::_internal_implementations_size() const {
  return _internal_implementations().size();
}
inline int FunctionSignature_Scalar::implementations_size() const {
  return _internal_implementations_size();
}
inline void FunctionSignature_Scalar::clear_implementations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.implementations_.Clear();
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Scalar::mutable_implementations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.implementations)
  return _internal_mutable_implementations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>* FunctionSignature_Scalar::mutable_implementations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Scalar.implementations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_implementations();
}
inline const ::substrait::FunctionSignature_Implementation& FunctionSignature_Scalar::implementations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.implementations)
  return _internal_implementations().Get(index);
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Scalar::add_implementations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::substrait::FunctionSignature_Implementation* _add = _internal_mutable_implementations()->Add();
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Scalar.implementations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>& FunctionSignature_Scalar::implementations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Scalar.implementations)
  return _internal_implementations();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>&
FunctionSignature_Scalar::_internal_implementations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.implementations_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>*
FunctionSignature_Scalar::_internal_mutable_implementations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.implementations_;
}

inline bool FunctionSignature_Scalar::has_final_variable_behavior() const {
  return final_variable_behavior_case() != FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline void FunctionSignature_Scalar::clear_has_final_variable_behavior() {
  _impl_._oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline FunctionSignature_Scalar::FinalVariableBehaviorCase FunctionSignature_Scalar::final_variable_behavior_case() const {
  return FunctionSignature_Scalar::FinalVariableBehaviorCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionSignature_Aggregate

// repeated .substrait.FunctionSignature.Argument arguments = 2 [json_name = "arguments"];
inline int FunctionSignature_Aggregate::_internal_arguments_size() const {
  return _internal_arguments().size();
}
inline int FunctionSignature_Aggregate::arguments_size() const {
  return _internal_arguments_size();
}
inline void FunctionSignature_Aggregate::clear_arguments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arguments_.Clear();
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Aggregate::mutable_arguments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.arguments)
  return _internal_mutable_arguments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>* FunctionSignature_Aggregate::mutable_arguments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Aggregate.arguments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_arguments();
}
inline const ::substrait::FunctionSignature_Argument& FunctionSignature_Aggregate::arguments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.arguments)
  return _internal_arguments().Get(index);
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Aggregate::add_arguments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::substrait::FunctionSignature_Argument* _add = _internal_mutable_arguments()->Add();
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Aggregate.arguments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>& FunctionSignature_Aggregate::arguments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Aggregate.arguments)
  return _internal_arguments();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>&
FunctionSignature_Aggregate::_internal_arguments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arguments_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>*
FunctionSignature_Aggregate::_internal_mutable_arguments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.arguments_;
}

// string name = 3 [json_name = "name"];
inline void FunctionSignature_Aggregate::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& FunctionSignature_Aggregate::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FunctionSignature_Aggregate::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.name)
}
inline std::string* FunctionSignature_Aggregate::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.name)
  return _s;
}
inline const std::string& FunctionSignature_Aggregate::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void FunctionSignature_Aggregate::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* FunctionSignature_Aggregate::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* FunctionSignature_Aggregate::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.name)
  return _impl_.name_.Release();
}
inline void FunctionSignature_Aggregate::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.name)
}

// .substrait.FunctionSignature.Description description = 4 [json_name = "description"];
inline bool FunctionSignature_Aggregate::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.description_ != nullptr);
  return value;
}
inline void FunctionSignature_Aggregate::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.description_ != nullptr) _impl_.description_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Aggregate::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::FunctionSignature_Description* p = _impl_.description_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::FunctionSignature_Description&>(::substrait::_FunctionSignature_Description_default_instance_);
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Aggregate::description() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.description)
  return _internal_description();
}
inline void FunctionSignature_Aggregate::unsafe_arena_set_allocated_description(::substrait::FunctionSignature_Description* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.description_);
  }
  _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Aggregate.description)
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Aggregate::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::FunctionSignature_Description* released = _impl_.description_;
  _impl_.description_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Aggregate::unsafe_arena_release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.description)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::FunctionSignature_Description* temp = _impl_.description_;
  _impl_.description_ = nullptr;
  return temp;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Aggregate::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.description_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::FunctionSignature_Description>(GetArena());
    _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(p);
  }
  return _impl_.description_;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Aggregate::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_Description* _msg = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.description)
  return _msg;
}
inline void FunctionSignature_Aggregate::set_allocated_description(::substrait::FunctionSignature_Description* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::substrait::FunctionSignature_Description*>(_impl_.description_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::substrait::FunctionSignature_Description*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.description)
}

// bool deterministic = 7 [json_name = "deterministic"];
inline void FunctionSignature_Aggregate::clear_deterministic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.deterministic_ = false;
}
inline bool FunctionSignature_Aggregate::deterministic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.deterministic)
  return _internal_deterministic();
}
inline void FunctionSignature_Aggregate::set_deterministic(bool value) {
  _internal_set_deterministic(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.deterministic)
}
inline bool FunctionSignature_Aggregate::_internal_deterministic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.deterministic_;
}
inline void FunctionSignature_Aggregate::_internal_set_deterministic(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.deterministic_ = value;
}

// bool session_dependent = 8 [json_name = "sessionDependent"];
inline void FunctionSignature_Aggregate::clear_session_dependent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.session_dependent_ = false;
}
inline bool FunctionSignature_Aggregate::session_dependent() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.session_dependent)
  return _internal_session_dependent();
}
inline void FunctionSignature_Aggregate::set_session_dependent(bool value) {
  _internal_set_session_dependent(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.session_dependent)
}
inline bool FunctionSignature_Aggregate::_internal_session_dependent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.session_dependent_;
}
inline void FunctionSignature_Aggregate::_internal_set_session_dependent(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.session_dependent_ = value;
}

// .substrait.DerivationExpression output_type = 9 [json_name = "outputType"];
inline bool FunctionSignature_Aggregate::has_output_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.output_type_ != nullptr);
  return value;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Aggregate::_internal_output_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::DerivationExpression* p = _impl_.output_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::DerivationExpression&>(::substrait::_DerivationExpression_default_instance_);
}
inline const ::substrait::DerivationExpression& FunctionSignature_Aggregate::output_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.output_type)
  return _internal_output_type();
}
inline void FunctionSignature_Aggregate::unsafe_arena_set_allocated_output_type(::substrait::DerivationExpression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_type_);
  }
  _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Aggregate.output_type)
}
inline ::substrait::DerivationExpression* FunctionSignature_Aggregate::release_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::substrait::DerivationExpression* released = _impl_.output_type_;
  _impl_.output_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::DerivationExpression* FunctionSignature_Aggregate::unsafe_arena_release_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.output_type)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::substrait::DerivationExpression* temp = _impl_.output_type_;
  _impl_.output_type_ = nullptr;
  return temp;
}
inline ::substrait::DerivationExpression* FunctionSignature_Aggregate::_internal_mutable_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.output_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::DerivationExpression>(GetArena());
    _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(p);
  }
  return _impl_.output_type_;
}
inline ::substrait::DerivationExpression* FunctionSignature_Aggregate::mutable_output_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::DerivationExpression* _msg = _internal_mutable_output_type();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.output_type)
  return _msg;
}
inline void FunctionSignature_Aggregate::set_allocated_output_type(::substrait::DerivationExpression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.output_type)
}

// .substrait.FunctionSignature.FinalArgVariadic variadic = 10 [json_name = "variadic"];
inline bool FunctionSignature_Aggregate::has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline bool FunctionSignature_Aggregate::_internal_has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline void FunctionSignature_Aggregate::set_has_variadic() {
  _impl_._oneof_case_[0] = kVariadic;
}
inline void FunctionSignature_Aggregate::clear_variadic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (final_variable_behavior_case() == kVariadic) {
    if (GetArena() == nullptr) {
      delete _impl_.final_variable_behavior_.variadic_;
    }
    clear_has_final_variable_behavior();
  }
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Aggregate::release_variadic() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.variadic)
  if (final_variable_behavior_case() == kVariadic) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.variadic_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.final_variable_behavior_.variadic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Aggregate::_internal_variadic() const {
  return final_variable_behavior_case() == kVariadic ? *_impl_.final_variable_behavior_.variadic_ : reinterpret_cast<::substrait::FunctionSignature_FinalArgVariadic&>(::substrait::_FunctionSignature_FinalArgVariadic_default_instance_);
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Aggregate::variadic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.variadic)
  return _internal_variadic();
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Aggregate::unsafe_arena_release_variadic() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Aggregate.variadic)
  if (final_variable_behavior_case() == kVariadic) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.variadic_;
    _impl_.final_variable_behavior_.variadic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Aggregate::unsafe_arena_set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_final_variable_behavior();
  if (value) {
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Aggregate.variadic)
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Aggregate::_internal_mutable_variadic() {
  if (final_variable_behavior_case() != kVariadic) {
    clear_final_variable_behavior();
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = CreateMaybeMessage<::substrait::FunctionSignature_FinalArgVariadic>(GetArena());
  }
  return _impl_.final_variable_behavior_.variadic_;
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Aggregate::mutable_variadic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_FinalArgVariadic* _msg = _internal_mutable_variadic();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.variadic)
  return _msg;
}

// .substrait.FunctionSignature.FinalArgNormal normal = 11 [json_name = "normal"];
inline bool FunctionSignature_Aggregate::has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline bool FunctionSignature_Aggregate::_internal_has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline void FunctionSignature_Aggregate::set_has_normal() {
  _impl_._oneof_case_[0] = kNormal;
}
inline void FunctionSignature_Aggregate::clear_normal() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (final_variable_behavior_case() == kNormal) {
    if (GetArena() == nullptr) {
      delete _impl_.final_variable_behavior_.normal_;
    }
    clear_has_final_variable_behavior();
  }
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Aggregate::release_normal() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.normal)
  if (final_variable_behavior_case() == kNormal) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.normal_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.final_variable_behavior_.normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Aggregate::_internal_normal() const {
  return final_variable_behavior_case() == kNormal ? *_impl_.final_variable_behavior_.normal_ : reinterpret_cast<::substrait::FunctionSignature_FinalArgNormal&>(::substrait::_FunctionSignature_FinalArgNormal_default_instance_);
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Aggregate::normal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.normal)
  return _internal_normal();
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Aggregate::unsafe_arena_release_normal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Aggregate.normal)
  if (final_variable_behavior_case() == kNormal) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.normal_;
    _impl_.final_variable_behavior_.normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Aggregate::unsafe_arena_set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_final_variable_behavior();
  if (value) {
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Aggregate.normal)
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Aggregate::_internal_mutable_normal() {
  if (final_variable_behavior_case() != kNormal) {
    clear_final_variable_behavior();
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = CreateMaybeMessage<::substrait::FunctionSignature_FinalArgNormal>(GetArena());
  }
  return _impl_.final_variable_behavior_.normal_;
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Aggregate::mutable_normal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_FinalArgNormal* _msg = _internal_mutable_normal();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.normal)
  return _msg;
}

// bool ordered = 14 [json_name = "ordered"];
inline void FunctionSignature_Aggregate::clear_ordered() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ordered_ = false;
}
inline bool FunctionSignature_Aggregate::ordered() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.ordered)
  return _internal_ordered();
}
inline void FunctionSignature_Aggregate::set_ordered(bool value) {
  _internal_set_ordered(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.ordered)
}
inline bool FunctionSignature_Aggregate::_internal_ordered() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ordered_;
}
inline void FunctionSignature_Aggregate::_internal_set_ordered(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ordered_ = value;
}

// uint64 max_set = 12 [json_name = "maxSet"];
inline void FunctionSignature_Aggregate::clear_max_set() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_set_ = ::uint64_t{0u};
}
inline ::uint64_t FunctionSignature_Aggregate::max_set() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.max_set)
  return _internal_max_set();
}
inline void FunctionSignature_Aggregate::set_max_set(::uint64_t value) {
  _internal_set_max_set(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.max_set)
}
inline ::uint64_t FunctionSignature_Aggregate::_internal_max_set() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_set_;
}
inline void FunctionSignature_Aggregate::_internal_set_max_set(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_set_ = value;
}

// .substrait.Type intermediate_type = 13 [json_name = "intermediateType"];
inline bool FunctionSignature_Aggregate::has_intermediate_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.intermediate_type_ != nullptr);
  return value;
}
inline const ::substrait::Type& FunctionSignature_Aggregate::_internal_intermediate_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::Type* p = _impl_.intermediate_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::Type&>(::substrait::_Type_default_instance_);
}
inline const ::substrait::Type& FunctionSignature_Aggregate::intermediate_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.intermediate_type)
  return _internal_intermediate_type();
}
inline void FunctionSignature_Aggregate::unsafe_arena_set_allocated_intermediate_type(::substrait::Type* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.intermediate_type_);
  }
  _impl_.intermediate_type_ = reinterpret_cast<::substrait::Type*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Aggregate.intermediate_type)
}
inline ::substrait::Type* FunctionSignature_Aggregate::release_intermediate_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::substrait::Type* released = _impl_.intermediate_type_;
  _impl_.intermediate_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::Type* FunctionSignature_Aggregate::unsafe_arena_release_intermediate_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.intermediate_type)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::substrait::Type* temp = _impl_.intermediate_type_;
  _impl_.intermediate_type_ = nullptr;
  return temp;
}
inline ::substrait::Type* FunctionSignature_Aggregate::_internal_mutable_intermediate_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.intermediate_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::Type>(GetArena());
    _impl_.intermediate_type_ = reinterpret_cast<::substrait::Type*>(p);
  }
  return _impl_.intermediate_type_;
}
inline ::substrait::Type* FunctionSignature_Aggregate::mutable_intermediate_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::Type* _msg = _internal_mutable_intermediate_type();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.intermediate_type)
  return _msg;
}
inline void FunctionSignature_Aggregate::set_allocated_intermediate_type(::substrait::Type* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.intermediate_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.intermediate_type_ = reinterpret_cast<::substrait::Type*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.intermediate_type)
}

// repeated .substrait.FunctionSignature.Implementation implementations = 15 [json_name = "implementations"];
inline int FunctionSignature_Aggregate::_internal_implementations_size() const {
  return _internal_implementations().size();
}
inline int FunctionSignature_Aggregate::implementations_size() const {
  return _internal_implementations_size();
}
inline void FunctionSignature_Aggregate::clear_implementations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.implementations_.Clear();
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Aggregate::mutable_implementations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.implementations)
  return _internal_mutable_implementations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>* FunctionSignature_Aggregate::mutable_implementations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Aggregate.implementations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_implementations();
}
inline const ::substrait::FunctionSignature_Implementation& FunctionSignature_Aggregate::implementations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.implementations)
  return _internal_implementations().Get(index);
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Aggregate::add_implementations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::substrait::FunctionSignature_Implementation* _add = _internal_mutable_implementations()->Add();
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Aggregate.implementations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>& FunctionSignature_Aggregate::implementations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Aggregate.implementations)
  return _internal_implementations();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>&
FunctionSignature_Aggregate::_internal_implementations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.implementations_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>*
FunctionSignature_Aggregate::_internal_mutable_implementations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.implementations_;
}

inline bool FunctionSignature_Aggregate::has_final_variable_behavior() const {
  return final_variable_behavior_case() != FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline void FunctionSignature_Aggregate::clear_has_final_variable_behavior() {
  _impl_._oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline FunctionSignature_Aggregate::FinalVariableBehaviorCase FunctionSignature_Aggregate::final_variable_behavior_case() const {
  return FunctionSignature_Aggregate::FinalVariableBehaviorCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionSignature_Window

// repeated .substrait.FunctionSignature.Argument arguments = 2 [json_name = "arguments"];
inline int FunctionSignature_Window::_internal_arguments_size() const {
  return _internal_arguments().size();
}
inline int FunctionSignature_Window::arguments_size() const {
  return _internal_arguments_size();
}
inline void FunctionSignature_Window::clear_arguments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.arguments_.Clear();
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Window::mutable_arguments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.arguments)
  return _internal_mutable_arguments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>* FunctionSignature_Window::mutable_arguments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Window.arguments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_arguments();
}
inline const ::substrait::FunctionSignature_Argument& FunctionSignature_Window::arguments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.arguments)
  return _internal_arguments().Get(index);
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Window::add_arguments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::substrait::FunctionSignature_Argument* _add = _internal_mutable_arguments()->Add();
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Window.arguments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>& FunctionSignature_Window::arguments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Window.arguments)
  return _internal_arguments();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>&
FunctionSignature_Window::_internal_arguments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.arguments_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Argument>*
FunctionSignature_Window::_internal_mutable_arguments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.arguments_;
}

// repeated string name = 3 [json_name = "name"];
inline int FunctionSignature_Window::_internal_name_size() const {
  return _internal_name().size();
}
inline int FunctionSignature_Window::name_size() const {
  return _internal_name_size();
}
inline void FunctionSignature_Window::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.Clear();
}
inline std::string* FunctionSignature_Window::add_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_name()->Add();
  // @@protoc_insertion_point(field_add_mutable:substrait.FunctionSignature.Window.name)
  return _s;
}
inline const std::string& FunctionSignature_Window::name(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.name)
  return _internal_name().Get(index);
}
inline std::string* FunctionSignature_Window::mutable_name(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.name)
  return _internal_mutable_name()->Mutable(index);
}
inline void FunctionSignature_Window::set_name(int index, const std::string& value) {
  _internal_mutable_name()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::set_name(int index, std::string&& value) {
  _internal_mutable_name()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::set_name(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_name()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::set_name(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_name()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::set_name(int index, absl::string_view value) {
  _internal_mutable_name()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::add_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::add_name(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::add_name(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::add_name(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::add_name(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_name()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:substrait.FunctionSignature.Window.name)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionSignature_Window::name() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Window.name)
  return _internal_name();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionSignature_Window::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Window.name)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_name();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionSignature_Window::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionSignature_Window::_internal_mutable_name() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.name_;
}

// .substrait.FunctionSignature.Description description = 4 [json_name = "description"];
inline bool FunctionSignature_Window::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.description_ != nullptr);
  return value;
}
inline void FunctionSignature_Window::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.description_ != nullptr) _impl_.description_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Window::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::FunctionSignature_Description* p = _impl_.description_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::FunctionSignature_Description&>(::substrait::_FunctionSignature_Description_default_instance_);
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Window::description() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.description)
  return _internal_description();
}
inline void FunctionSignature_Window::unsafe_arena_set_allocated_description(::substrait::FunctionSignature_Description* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.description_);
  }
  _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Window.description)
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Window::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::FunctionSignature_Description* released = _impl_.description_;
  _impl_.description_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Window::unsafe_arena_release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.description)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::FunctionSignature_Description* temp = _impl_.description_;
  _impl_.description_ = nullptr;
  return temp;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Window::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.description_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::FunctionSignature_Description>(GetArena());
    _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(p);
  }
  return _impl_.description_;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Window::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_Description* _msg = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.description)
  return _msg;
}
inline void FunctionSignature_Window::set_allocated_description(::substrait::FunctionSignature_Description* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::substrait::FunctionSignature_Description*>(_impl_.description_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::substrait::FunctionSignature_Description*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.description_ = reinterpret_cast<::substrait::FunctionSignature_Description*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Window.description)
}

// bool deterministic = 7 [json_name = "deterministic"];
inline void FunctionSignature_Window::clear_deterministic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.deterministic_ = false;
}
inline bool FunctionSignature_Window::deterministic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.deterministic)
  return _internal_deterministic();
}
inline void FunctionSignature_Window::set_deterministic(bool value) {
  _internal_set_deterministic(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.deterministic)
}
inline bool FunctionSignature_Window::_internal_deterministic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.deterministic_;
}
inline void FunctionSignature_Window::_internal_set_deterministic(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.deterministic_ = value;
}

// bool session_dependent = 8 [json_name = "sessionDependent"];
inline void FunctionSignature_Window::clear_session_dependent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.session_dependent_ = false;
}
inline bool FunctionSignature_Window::session_dependent() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.session_dependent)
  return _internal_session_dependent();
}
inline void FunctionSignature_Window::set_session_dependent(bool value) {
  _internal_set_session_dependent(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.session_dependent)
}
inline bool FunctionSignature_Window::_internal_session_dependent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.session_dependent_;
}
inline void FunctionSignature_Window::_internal_set_session_dependent(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.session_dependent_ = value;
}

// .substrait.DerivationExpression intermediate_type = 9 [json_name = "intermediateType"];
inline bool FunctionSignature_Window::has_intermediate_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.intermediate_type_ != nullptr);
  return value;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Window::_internal_intermediate_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::DerivationExpression* p = _impl_.intermediate_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::DerivationExpression&>(::substrait::_DerivationExpression_default_instance_);
}
inline const ::substrait::DerivationExpression& FunctionSignature_Window::intermediate_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.intermediate_type)
  return _internal_intermediate_type();
}
inline void FunctionSignature_Window::unsafe_arena_set_allocated_intermediate_type(::substrait::DerivationExpression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.intermediate_type_);
  }
  _impl_.intermediate_type_ = reinterpret_cast<::substrait::DerivationExpression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Window.intermediate_type)
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::release_intermediate_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::substrait::DerivationExpression* released = _impl_.intermediate_type_;
  _impl_.intermediate_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::unsafe_arena_release_intermediate_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.intermediate_type)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::substrait::DerivationExpression* temp = _impl_.intermediate_type_;
  _impl_.intermediate_type_ = nullptr;
  return temp;
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::_internal_mutable_intermediate_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.intermediate_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::DerivationExpression>(GetArena());
    _impl_.intermediate_type_ = reinterpret_cast<::substrait::DerivationExpression*>(p);
  }
  return _impl_.intermediate_type_;
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::mutable_intermediate_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::DerivationExpression* _msg = _internal_mutable_intermediate_type();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.intermediate_type)
  return _msg;
}
inline void FunctionSignature_Window::set_allocated_intermediate_type(::substrait::DerivationExpression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.intermediate_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.intermediate_type_ = reinterpret_cast<::substrait::DerivationExpression*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Window.intermediate_type)
}

// .substrait.DerivationExpression output_type = 10 [json_name = "outputType"];
inline bool FunctionSignature_Window::has_output_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.output_type_ != nullptr);
  return value;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Window::_internal_output_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::DerivationExpression* p = _impl_.output_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::DerivationExpression&>(::substrait::_DerivationExpression_default_instance_);
}
inline const ::substrait::DerivationExpression& FunctionSignature_Window::output_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.output_type)
  return _internal_output_type();
}
inline void FunctionSignature_Window::unsafe_arena_set_allocated_output_type(::substrait::DerivationExpression* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_type_);
  }
  _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Window.output_type)
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::release_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::substrait::DerivationExpression* released = _impl_.output_type_;
  _impl_.output_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::unsafe_arena_release_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.output_type)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::substrait::DerivationExpression* temp = _impl_.output_type_;
  _impl_.output_type_ = nullptr;
  return temp;
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::_internal_mutable_output_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.output_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::DerivationExpression>(GetArena());
    _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(p);
  }
  return _impl_.output_type_;
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::mutable_output_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::DerivationExpression* _msg = _internal_mutable_output_type();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.output_type)
  return _msg;
}
inline void FunctionSignature_Window::set_allocated_output_type(::substrait::DerivationExpression* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.output_type_ = reinterpret_cast<::substrait::DerivationExpression*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Window.output_type)
}

// .substrait.FunctionSignature.FinalArgVariadic variadic = 16 [json_name = "variadic"];
inline bool FunctionSignature_Window::has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline bool FunctionSignature_Window::_internal_has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline void FunctionSignature_Window::set_has_variadic() {
  _impl_._oneof_case_[0] = kVariadic;
}
inline void FunctionSignature_Window::clear_variadic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (final_variable_behavior_case() == kVariadic) {
    if (GetArena() == nullptr) {
      delete _impl_.final_variable_behavior_.variadic_;
    }
    clear_has_final_variable_behavior();
  }
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Window::release_variadic() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.variadic)
  if (final_variable_behavior_case() == kVariadic) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.variadic_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.final_variable_behavior_.variadic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Window::_internal_variadic() const {
  return final_variable_behavior_case() == kVariadic ? *_impl_.final_variable_behavior_.variadic_ : reinterpret_cast<::substrait::FunctionSignature_FinalArgVariadic&>(::substrait::_FunctionSignature_FinalArgVariadic_default_instance_);
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Window::variadic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.variadic)
  return _internal_variadic();
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Window::unsafe_arena_release_variadic() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Window.variadic)
  if (final_variable_behavior_case() == kVariadic) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.variadic_;
    _impl_.final_variable_behavior_.variadic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Window::unsafe_arena_set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_final_variable_behavior();
  if (value) {
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Window.variadic)
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Window::_internal_mutable_variadic() {
  if (final_variable_behavior_case() != kVariadic) {
    clear_final_variable_behavior();
    set_has_variadic();
    _impl_.final_variable_behavior_.variadic_ = CreateMaybeMessage<::substrait::FunctionSignature_FinalArgVariadic>(GetArena());
  }
  return _impl_.final_variable_behavior_.variadic_;
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Window::mutable_variadic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_FinalArgVariadic* _msg = _internal_mutable_variadic();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.variadic)
  return _msg;
}

// .substrait.FunctionSignature.FinalArgNormal normal = 17 [json_name = "normal"];
inline bool FunctionSignature_Window::has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline bool FunctionSignature_Window::_internal_has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline void FunctionSignature_Window::set_has_normal() {
  _impl_._oneof_case_[0] = kNormal;
}
inline void FunctionSignature_Window::clear_normal() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (final_variable_behavior_case() == kNormal) {
    if (GetArena() == nullptr) {
      delete _impl_.final_variable_behavior_.normal_;
    }
    clear_has_final_variable_behavior();
  }
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Window::release_normal() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.normal)
  if (final_variable_behavior_case() == kNormal) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.normal_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.final_variable_behavior_.normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Window::_internal_normal() const {
  return final_variable_behavior_case() == kNormal ? *_impl_.final_variable_behavior_.normal_ : reinterpret_cast<::substrait::FunctionSignature_FinalArgNormal&>(::substrait::_FunctionSignature_FinalArgNormal_default_instance_);
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Window::normal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.normal)
  return _internal_normal();
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Window::unsafe_arena_release_normal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Window.normal)
  if (final_variable_behavior_case() == kNormal) {
    clear_has_final_variable_behavior();
    auto* temp = _impl_.final_variable_behavior_.normal_;
    _impl_.final_variable_behavior_.normal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Window::unsafe_arena_set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_final_variable_behavior();
  if (value) {
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Window.normal)
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Window::_internal_mutable_normal() {
  if (final_variable_behavior_case() != kNormal) {
    clear_final_variable_behavior();
    set_has_normal();
    _impl_.final_variable_behavior_.normal_ = CreateMaybeMessage<::substrait::FunctionSignature_FinalArgNormal>(GetArena());
  }
  return _impl_.final_variable_behavior_.normal_;
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Window::mutable_normal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_FinalArgNormal* _msg = _internal_mutable_normal();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.normal)
  return _msg;
}

// bool ordered = 11 [json_name = "ordered"];
inline void FunctionSignature_Window::clear_ordered() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ordered_ = false;
}
inline bool FunctionSignature_Window::ordered() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.ordered)
  return _internal_ordered();
}
inline void FunctionSignature_Window::set_ordered(bool value) {
  _internal_set_ordered(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.ordered)
}
inline bool FunctionSignature_Window::_internal_ordered() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ordered_;
}
inline void FunctionSignature_Window::_internal_set_ordered(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ordered_ = value;
}

// uint64 max_set = 12 [json_name = "maxSet"];
inline void FunctionSignature_Window::clear_max_set() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_set_ = ::uint64_t{0u};
}
inline ::uint64_t FunctionSignature_Window::max_set() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.max_set)
  return _internal_max_set();
}
inline void FunctionSignature_Window::set_max_set(::uint64_t value) {
  _internal_set_max_set(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.max_set)
}
inline ::uint64_t FunctionSignature_Window::_internal_max_set() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_set_;
}
inline void FunctionSignature_Window::_internal_set_max_set(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_set_ = value;
}

// .substrait.FunctionSignature.Window.WindowType window_type = 14 [json_name = "windowType"];
inline void FunctionSignature_Window::clear_window_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.window_type_ = 0;
}
inline ::substrait::FunctionSignature_Window_WindowType FunctionSignature_Window::window_type() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.window_type)
  return _internal_window_type();
}
inline void FunctionSignature_Window::set_window_type(::substrait::FunctionSignature_Window_WindowType value) {
  _internal_set_window_type(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.window_type)
}
inline ::substrait::FunctionSignature_Window_WindowType FunctionSignature_Window::_internal_window_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::substrait::FunctionSignature_Window_WindowType>(_impl_.window_type_);
}
inline void FunctionSignature_Window::_internal_set_window_type(::substrait::FunctionSignature_Window_WindowType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.window_type_ = value;
}

// repeated .substrait.FunctionSignature.Implementation implementations = 15 [json_name = "implementations"];
inline int FunctionSignature_Window::_internal_implementations_size() const {
  return _internal_implementations().size();
}
inline int FunctionSignature_Window::implementations_size() const {
  return _internal_implementations_size();
}
inline void FunctionSignature_Window::clear_implementations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.implementations_.Clear();
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Window::mutable_implementations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.implementations)
  return _internal_mutable_implementations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>* FunctionSignature_Window::mutable_implementations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Window.implementations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_implementations();
}
inline const ::substrait::FunctionSignature_Implementation& FunctionSignature_Window::implementations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.implementations)
  return _internal_implementations().Get(index);
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Window::add_implementations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::substrait::FunctionSignature_Implementation* _add = _internal_mutable_implementations()->Add();
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Window.implementations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>& FunctionSignature_Window::implementations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Window.implementations)
  return _internal_implementations();
}
inline const ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>&
FunctionSignature_Window::_internal_implementations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.implementations_;
}
inline ::google::protobuf::RepeatedPtrField<::substrait::FunctionSignature_Implementation>*
FunctionSignature_Window::_internal_mutable_implementations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.implementations_;
}

inline bool FunctionSignature_Window::has_final_variable_behavior() const {
  return final_variable_behavior_case() != FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline void FunctionSignature_Window::clear_has_final_variable_behavior() {
  _impl_._oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline FunctionSignature_Window::FinalVariableBehaviorCase FunctionSignature_Window::final_variable_behavior_case() const {
  return FunctionSignature_Window::FinalVariableBehaviorCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionSignature_Description

// string language = 1 [json_name = "language"];
inline void FunctionSignature_Description::clear_language() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.language_.ClearToEmpty();
}
inline const std::string& FunctionSignature_Description::language() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Description.language)
  return _internal_language();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FunctionSignature_Description::set_language(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.language_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Description.language)
}
inline std::string* FunctionSignature_Description::mutable_language() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_language();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Description.language)
  return _s;
}
inline const std::string& FunctionSignature_Description::_internal_language() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.language_.Get();
}
inline void FunctionSignature_Description::_internal_set_language(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.language_.Set(value, GetArena());
}
inline std::string* FunctionSignature_Description::_internal_mutable_language() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.language_.Mutable( GetArena());
}
inline std::string* FunctionSignature_Description::release_language() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Description.language)
  return _impl_.language_.Release();
}
inline void FunctionSignature_Description::set_allocated_language(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.language_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.language_.IsDefault()) {
          _impl_.language_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Description.language)
}

// string body = 2 [json_name = "body"];
inline void FunctionSignature_Description::clear_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.ClearToEmpty();
}
inline const std::string& FunctionSignature_Description::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Description.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FunctionSignature_Description::set_body(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Description.body)
}
inline std::string* FunctionSignature_Description::mutable_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Description.body)
  return _s;
}
inline const std::string& FunctionSignature_Description::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_.Get();
}
inline void FunctionSignature_Description::_internal_set_body(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(value, GetArena());
}
inline std::string* FunctionSignature_Description::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* FunctionSignature_Description::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Description.body)
  return _impl_.body_.Release();
}
inline void FunctionSignature_Description::set_allocated_body(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.body_.IsDefault()) {
          _impl_.body_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Description.body)
}

// -------------------------------------------------------------------

// FunctionSignature_Implementation

// .substrait.FunctionSignature.Implementation.Type type = 1 [json_name = "type"];
inline void FunctionSignature_Implementation::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_ = 0;
}
inline ::substrait::FunctionSignature_Implementation_Type FunctionSignature_Implementation::type() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Implementation.type)
  return _internal_type();
}
inline void FunctionSignature_Implementation::set_type(::substrait::FunctionSignature_Implementation_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Implementation.type)
}
inline ::substrait::FunctionSignature_Implementation_Type FunctionSignature_Implementation::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::substrait::FunctionSignature_Implementation_Type>(_impl_.type_);
}
inline void FunctionSignature_Implementation::_internal_set_type(::substrait::FunctionSignature_Implementation_Type value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// string uri = 2 [json_name = "uri"];
inline void FunctionSignature_Implementation::clear_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uri_.ClearToEmpty();
}
inline const std::string& FunctionSignature_Implementation::uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Implementation.uri)
  return _internal_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FunctionSignature_Implementation::set_uri(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uri_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Implementation.uri)
}
inline std::string* FunctionSignature_Implementation::mutable_uri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uri();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Implementation.uri)
  return _s;
}
inline const std::string& FunctionSignature_Implementation::_internal_uri() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uri_.Get();
}
inline void FunctionSignature_Implementation::_internal_set_uri(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uri_.Set(value, GetArena());
}
inline std::string* FunctionSignature_Implementation::_internal_mutable_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uri_.Mutable( GetArena());
}
inline std::string* FunctionSignature_Implementation::release_uri() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Implementation.uri)
  return _impl_.uri_.Release();
}
inline void FunctionSignature_Implementation::set_allocated_uri(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uri_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uri_.IsDefault()) {
          _impl_.uri_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Implementation.uri)
}

// -------------------------------------------------------------------

// FunctionSignature_Argument_ValueArgument

// .substrait.ParameterizedType type = 1 [json_name = "type"];
inline bool FunctionSignature_Argument_ValueArgument::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_ != nullptr);
  return value;
}
inline const ::substrait::ParameterizedType& FunctionSignature_Argument_ValueArgument::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::ParameterizedType* p = _impl_.type_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::ParameterizedType&>(::substrait::_ParameterizedType_default_instance_);
}
inline const ::substrait::ParameterizedType& FunctionSignature_Argument_ValueArgument::type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.ValueArgument.type)
  return _internal_type();
}
inline void FunctionSignature_Argument_ValueArgument::unsafe_arena_set_allocated_type(::substrait::ParameterizedType* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_);
  }
  _impl_.type_ = reinterpret_cast<::substrait::ParameterizedType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Argument.ValueArgument.type)
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_ValueArgument::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::ParameterizedType* released = _impl_.type_;
  _impl_.type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_ValueArgument::unsafe_arena_release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.ValueArgument.type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::ParameterizedType* temp = _impl_.type_;
  _impl_.type_ = nullptr;
  return temp;
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_ValueArgument::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.type_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType>(GetArena());
    _impl_.type_ = reinterpret_cast<::substrait::ParameterizedType*>(p);
  }
  return _impl_.type_;
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_ValueArgument::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::ParameterizedType* _msg = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.ValueArgument.type)
  return _msg;
}
inline void FunctionSignature_Argument_ValueArgument::set_allocated_type(::substrait::ParameterizedType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.type_ = reinterpret_cast<::substrait::ParameterizedType*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.ValueArgument.type)
}

// bool constant = 2 [json_name = "constant"];
inline void FunctionSignature_Argument_ValueArgument::clear_constant() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.constant_ = false;
}
inline bool FunctionSignature_Argument_ValueArgument::constant() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.ValueArgument.constant)
  return _internal_constant();
}
inline void FunctionSignature_Argument_ValueArgument::set_constant(bool value) {
  _internal_set_constant(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.ValueArgument.constant)
}
inline bool FunctionSignature_Argument_ValueArgument::_internal_constant() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.constant_;
}
inline void FunctionSignature_Argument_ValueArgument::_internal_set_constant(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.constant_ = value;
}

// -------------------------------------------------------------------

// FunctionSignature_Argument_TypeArgument

// .substrait.ParameterizedType type = 1 [json_name = "type"];
inline bool FunctionSignature_Argument_TypeArgument::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_ != nullptr);
  return value;
}
inline const ::substrait::ParameterizedType& FunctionSignature_Argument_TypeArgument::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::substrait::ParameterizedType* p = _impl_.type_;
  return p != nullptr ? *p : reinterpret_cast<const ::substrait::ParameterizedType&>(::substrait::_ParameterizedType_default_instance_);
}
inline const ::substrait::ParameterizedType& FunctionSignature_Argument_TypeArgument::type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.TypeArgument.type)
  return _internal_type();
}
inline void FunctionSignature_Argument_TypeArgument::unsafe_arena_set_allocated_type(::substrait::ParameterizedType* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_);
  }
  _impl_.type_ = reinterpret_cast<::substrait::ParameterizedType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Argument.TypeArgument.type)
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_TypeArgument::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::ParameterizedType* released = _impl_.type_;
  _impl_.type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_TypeArgument::unsafe_arena_release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.TypeArgument.type)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::substrait::ParameterizedType* temp = _impl_.type_;
  _impl_.type_ = nullptr;
  return temp;
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_TypeArgument::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.type_ == nullptr) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType>(GetArena());
    _impl_.type_ = reinterpret_cast<::substrait::ParameterizedType*>(p);
  }
  return _impl_.type_;
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_TypeArgument::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::ParameterizedType* _msg = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.TypeArgument.type)
  return _msg;
}
inline void FunctionSignature_Argument_TypeArgument::set_allocated_type(::substrait::ParameterizedType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.type_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.type_ = reinterpret_cast<::substrait::ParameterizedType*>(value);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.TypeArgument.type)
}

// -------------------------------------------------------------------

// FunctionSignature_Argument_EnumArgument

// repeated string options = 1 [json_name = "options"];
inline int FunctionSignature_Argument_EnumArgument::_internal_options_size() const {
  return _internal_options().size();
}
inline int FunctionSignature_Argument_EnumArgument::options_size() const {
  return _internal_options_size();
}
inline void FunctionSignature_Argument_EnumArgument::clear_options() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.options_.Clear();
}
inline std::string* FunctionSignature_Argument_EnumArgument::add_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_options()->Add();
  // @@protoc_insertion_point(field_add_mutable:substrait.FunctionSignature.Argument.EnumArgument.options)
  return _s;
}
inline const std::string& FunctionSignature_Argument_EnumArgument::options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.EnumArgument.options)
  return _internal_options().Get(index);
}
inline std::string* FunctionSignature_Argument_EnumArgument::mutable_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.EnumArgument.options)
  return _internal_mutable_options()->Mutable(index);
}
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, const std::string& value) {
  _internal_mutable_options()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, std::string&& value) {
  _internal_mutable_options()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_options()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_options()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, absl::string_view value) {
  _internal_mutable_options()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::add_options(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_options()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::add_options(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_options()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::add_options(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_options()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::add_options(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_options()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::add_options(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_options()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionSignature_Argument_EnumArgument::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Argument.EnumArgument.options)
  return _internal_options();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionSignature_Argument_EnumArgument::mutable_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Argument.EnumArgument.options)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_options();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FunctionSignature_Argument_EnumArgument::_internal_options() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.options_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FunctionSignature_Argument_EnumArgument::_internal_mutable_options() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.options_;
}

// bool optional = 2 [json_name = "optional"];
inline void FunctionSignature_Argument_EnumArgument::clear_optional() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.optional_ = false;
}
inline bool FunctionSignature_Argument_EnumArgument::optional() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.EnumArgument.optional)
  return _internal_optional();
}
inline void FunctionSignature_Argument_EnumArgument::set_optional(bool value) {
  _internal_set_optional(value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.EnumArgument.optional)
}
inline bool FunctionSignature_Argument_EnumArgument::_internal_optional() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.optional_;
}
inline void FunctionSignature_Argument_EnumArgument::_internal_set_optional(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.optional_ = value;
}

// -------------------------------------------------------------------

// FunctionSignature_Argument

// string name = 1 [json_name = "name"];
inline void FunctionSignature_Argument::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& FunctionSignature_Argument::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FunctionSignature_Argument::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.name)
}
inline std::string* FunctionSignature_Argument::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.name)
  return _s;
}
inline const std::string& FunctionSignature_Argument::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void FunctionSignature_Argument::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* FunctionSignature_Argument::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* FunctionSignature_Argument::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.name)
  return _impl_.name_.Release();
}
inline void FunctionSignature_Argument::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.name)
}

// .substrait.FunctionSignature.Argument.ValueArgument value = 2 [json_name = "value"];
inline bool FunctionSignature_Argument::has_value() const {
  return argument_kind_case() == kValue;
}
inline bool FunctionSignature_Argument::_internal_has_value() const {
  return argument_kind_case() == kValue;
}
inline void FunctionSignature_Argument::set_has_value() {
  _impl_._oneof_case_[0] = kValue;
}
inline void FunctionSignature_Argument::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (argument_kind_case() == kValue) {
    if (GetArena() == nullptr) {
      delete _impl_.argument_kind_.value_;
    }
    clear_has_argument_kind();
  }
}
inline ::substrait::FunctionSignature_Argument_ValueArgument* FunctionSignature_Argument::release_value() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.value)
  if (argument_kind_case() == kValue) {
    clear_has_argument_kind();
    auto* temp = _impl_.argument_kind_.value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.argument_kind_.value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_Argument_ValueArgument& FunctionSignature_Argument::_internal_value() const {
  return argument_kind_case() == kValue ? *_impl_.argument_kind_.value_ : reinterpret_cast<::substrait::FunctionSignature_Argument_ValueArgument&>(::substrait::_FunctionSignature_Argument_ValueArgument_default_instance_);
}
inline const ::substrait::FunctionSignature_Argument_ValueArgument& FunctionSignature_Argument::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.value)
  return _internal_value();
}
inline ::substrait::FunctionSignature_Argument_ValueArgument* FunctionSignature_Argument::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Argument.value)
  if (argument_kind_case() == kValue) {
    clear_has_argument_kind();
    auto* temp = _impl_.argument_kind_.value_;
    _impl_.argument_kind_.value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Argument::unsafe_arena_set_allocated_value(::substrait::FunctionSignature_Argument_ValueArgument* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_argument_kind();
  if (value) {
    set_has_value();
    _impl_.argument_kind_.value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Argument.value)
}
inline ::substrait::FunctionSignature_Argument_ValueArgument* FunctionSignature_Argument::_internal_mutable_value() {
  if (argument_kind_case() != kValue) {
    clear_argument_kind();
    set_has_value();
    _impl_.argument_kind_.value_ = CreateMaybeMessage<::substrait::FunctionSignature_Argument_ValueArgument>(GetArena());
  }
  return _impl_.argument_kind_.value_;
}
inline ::substrait::FunctionSignature_Argument_ValueArgument* FunctionSignature_Argument::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_Argument_ValueArgument* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.value)
  return _msg;
}

// .substrait.FunctionSignature.Argument.TypeArgument type = 3 [json_name = "type"];
inline bool FunctionSignature_Argument::has_type() const {
  return argument_kind_case() == kType;
}
inline bool FunctionSignature_Argument::_internal_has_type() const {
  return argument_kind_case() == kType;
}
inline void FunctionSignature_Argument::set_has_type() {
  _impl_._oneof_case_[0] = kType;
}
inline void FunctionSignature_Argument::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (argument_kind_case() == kType) {
    if (GetArena() == nullptr) {
      delete _impl_.argument_kind_.type_;
    }
    clear_has_argument_kind();
  }
}
inline ::substrait::FunctionSignature_Argument_TypeArgument* FunctionSignature_Argument::release_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.type)
  if (argument_kind_case() == kType) {
    clear_has_argument_kind();
    auto* temp = _impl_.argument_kind_.type_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.argument_kind_.type_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_Argument_TypeArgument& FunctionSignature_Argument::_internal_type() const {
  return argument_kind_case() == kType ? *_impl_.argument_kind_.type_ : reinterpret_cast<::substrait::FunctionSignature_Argument_TypeArgument&>(::substrait::_FunctionSignature_Argument_TypeArgument_default_instance_);
}
inline const ::substrait::FunctionSignature_Argument_TypeArgument& FunctionSignature_Argument::type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.type)
  return _internal_type();
}
inline ::substrait::FunctionSignature_Argument_TypeArgument* FunctionSignature_Argument::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Argument.type)
  if (argument_kind_case() == kType) {
    clear_has_argument_kind();
    auto* temp = _impl_.argument_kind_.type_;
    _impl_.argument_kind_.type_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Argument::unsafe_arena_set_allocated_type(::substrait::FunctionSignature_Argument_TypeArgument* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_argument_kind();
  if (value) {
    set_has_type();
    _impl_.argument_kind_.type_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Argument.type)
}
inline ::substrait::FunctionSignature_Argument_TypeArgument* FunctionSignature_Argument::_internal_mutable_type() {
  if (argument_kind_case() != kType) {
    clear_argument_kind();
    set_has_type();
    _impl_.argument_kind_.type_ = CreateMaybeMessage<::substrait::FunctionSignature_Argument_TypeArgument>(GetArena());
  }
  return _impl_.argument_kind_.type_;
}
inline ::substrait::FunctionSignature_Argument_TypeArgument* FunctionSignature_Argument::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_Argument_TypeArgument* _msg = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.type)
  return _msg;
}

// .substrait.FunctionSignature.Argument.EnumArgument enum = 4 [json_name = "enum"];
inline bool FunctionSignature_Argument::has_enum_() const {
  return argument_kind_case() == kEnum;
}
inline bool FunctionSignature_Argument::_internal_has_enum_() const {
  return argument_kind_case() == kEnum;
}
inline void FunctionSignature_Argument::set_has_enum_() {
  _impl_._oneof_case_[0] = kEnum;
}
inline void FunctionSignature_Argument::clear_enum_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (argument_kind_case() == kEnum) {
    if (GetArena() == nullptr) {
      delete _impl_.argument_kind_.enum__;
    }
    clear_has_argument_kind();
  }
}
inline ::substrait::FunctionSignature_Argument_EnumArgument* FunctionSignature_Argument::release_enum_() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.enum)
  if (argument_kind_case() == kEnum) {
    clear_has_argument_kind();
    auto* temp = _impl_.argument_kind_.enum__;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.argument_kind_.enum__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::substrait::FunctionSignature_Argument_EnumArgument& FunctionSignature_Argument::_internal_enum_() const {
  return argument_kind_case() == kEnum ? *_impl_.argument_kind_.enum__ : reinterpret_cast<::substrait::FunctionSignature_Argument_EnumArgument&>(::substrait::_FunctionSignature_Argument_EnumArgument_default_instance_);
}
inline const ::substrait::FunctionSignature_Argument_EnumArgument& FunctionSignature_Argument::enum_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.enum)
  return _internal_enum_();
}
inline ::substrait::FunctionSignature_Argument_EnumArgument* FunctionSignature_Argument::unsafe_arena_release_enum_() {
  // @@protoc_insertion_point(field_unsafe_arena_release:substrait.FunctionSignature.Argument.enum)
  if (argument_kind_case() == kEnum) {
    clear_has_argument_kind();
    auto* temp = _impl_.argument_kind_.enum__;
    _impl_.argument_kind_.enum__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FunctionSignature_Argument::unsafe_arena_set_allocated_enum_(::substrait::FunctionSignature_Argument_EnumArgument* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_argument_kind();
  if (value) {
    set_has_enum_();
    _impl_.argument_kind_.enum__ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:substrait.FunctionSignature.Argument.enum)
}
inline ::substrait::FunctionSignature_Argument_EnumArgument* FunctionSignature_Argument::_internal_mutable_enum_() {
  if (argument_kind_case() != kEnum) {
    clear_argument_kind();
    set_has_enum_();
    _impl_.argument_kind_.enum__ = CreateMaybeMessage<::substrait::FunctionSignature_Argument_EnumArgument>(GetArena());
  }
  return _impl_.argument_kind_.enum__;
}
inline ::substrait::FunctionSignature_Argument_EnumArgument* FunctionSignature_Argument::mutable_enum_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::substrait::FunctionSignature_Argument_EnumArgument* _msg = _internal_mutable_enum_();
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.enum)
  return _msg;
}

inline bool FunctionSignature_Argument::has_argument_kind() const {
  return argument_kind_case() != ARGUMENT_KIND_NOT_SET;
}
inline void FunctionSignature_Argument::clear_has_argument_kind() {
  _impl_._oneof_case_[0] = ARGUMENT_KIND_NOT_SET;
}
inline FunctionSignature_Argument::ArgumentKindCase FunctionSignature_Argument::argument_kind_case() const {
  return FunctionSignature_Argument::ArgumentKindCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionSignature

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace substrait


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency>() {
  return ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor();
}
template <>
struct is_proto_enum<::substrait::FunctionSignature_Window_WindowType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::substrait::FunctionSignature_Window_WindowType>() {
  return ::substrait::FunctionSignature_Window_WindowType_descriptor();
}
template <>
struct is_proto_enum<::substrait::FunctionSignature_Implementation_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::substrait::FunctionSignature_Implementation_Type>() {
  return ::substrait::FunctionSignature_Implementation_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_substrait_2ffunction_2eproto_2epb_2eh
