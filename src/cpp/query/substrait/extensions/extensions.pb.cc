// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: substrait/extensions/extensions.proto
// Protobuf C++ Version: 5.27.1

#include "../../substrait/extensions/extensions.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace substrait {
namespace extensions {

inline constexpr SimpleExtensionURI::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : uri_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extension_uri_anchor_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SimpleExtensionURI::SimpleExtensionURI(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimpleExtensionURIDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleExtensionURIDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleExtensionURIDefaultTypeInternal() {}
  union {
    SimpleExtensionURI _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleExtensionURIDefaultTypeInternal _SimpleExtensionURI_default_instance_;

inline constexpr SimpleExtensionDeclaration_ExtensionTypeVariation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extension_uri_reference_{0u},
        type_variation_anchor_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SimpleExtensionDeclaration_ExtensionTypeVariation::SimpleExtensionDeclaration_ExtensionTypeVariation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimpleExtensionDeclaration_ExtensionTypeVariationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleExtensionDeclaration_ExtensionTypeVariationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleExtensionDeclaration_ExtensionTypeVariationDefaultTypeInternal() {}
  union {
    SimpleExtensionDeclaration_ExtensionTypeVariation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleExtensionDeclaration_ExtensionTypeVariationDefaultTypeInternal _SimpleExtensionDeclaration_ExtensionTypeVariation_default_instance_;

inline constexpr SimpleExtensionDeclaration_ExtensionType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extension_uri_reference_{0u},
        type_anchor_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SimpleExtensionDeclaration_ExtensionType::SimpleExtensionDeclaration_ExtensionType(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimpleExtensionDeclaration_ExtensionTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleExtensionDeclaration_ExtensionTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleExtensionDeclaration_ExtensionTypeDefaultTypeInternal() {}
  union {
    SimpleExtensionDeclaration_ExtensionType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleExtensionDeclaration_ExtensionTypeDefaultTypeInternal _SimpleExtensionDeclaration_ExtensionType_default_instance_;

inline constexpr SimpleExtensionDeclaration_ExtensionFunction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extension_uri_reference_{0u},
        function_anchor_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SimpleExtensionDeclaration_ExtensionFunction::SimpleExtensionDeclaration_ExtensionFunction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimpleExtensionDeclaration_ExtensionFunctionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleExtensionDeclaration_ExtensionFunctionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleExtensionDeclaration_ExtensionFunctionDefaultTypeInternal() {}
  union {
    SimpleExtensionDeclaration_ExtensionFunction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleExtensionDeclaration_ExtensionFunctionDefaultTypeInternal _SimpleExtensionDeclaration_ExtensionFunction_default_instance_;

inline constexpr SimpleExtensionDeclaration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mapping_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR SimpleExtensionDeclaration::SimpleExtensionDeclaration(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimpleExtensionDeclarationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleExtensionDeclarationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleExtensionDeclarationDefaultTypeInternal() {}
  union {
    SimpleExtensionDeclaration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleExtensionDeclarationDefaultTypeInternal _SimpleExtensionDeclaration_default_instance_;

inline constexpr AdvancedExtension::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        optimization_{nullptr},
        enhancement_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AdvancedExtension::AdvancedExtension(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AdvancedExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AdvancedExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AdvancedExtensionDefaultTypeInternal() {}
  union {
    AdvancedExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AdvancedExtensionDefaultTypeInternal _AdvancedExtension_default_instance_;
}  // namespace extensions
}  // namespace substrait
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_substrait_2fextensions_2fextensions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_substrait_2fextensions_2fextensions_2eproto = nullptr;
const ::uint32_t
    TableStruct_substrait_2fextensions_2fextensions_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionURI, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionURI, _impl_.extension_uri_anchor_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionURI, _impl_.uri_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionType, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionType, _impl_.extension_uri_reference_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionType, _impl_.type_anchor_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionType, _impl_.name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.extension_uri_reference_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.type_variation_anchor_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction, _impl_.extension_uri_reference_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction, _impl_.function_anchor_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction, _impl_.name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration, _impl_.mapping_type_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::AdvancedExtension, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::AdvancedExtension, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::AdvancedExtension, _impl_.optimization_),
        PROTOBUF_FIELD_OFFSET(::substrait::extensions::AdvancedExtension, _impl_.enhancement_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::substrait::extensions::SimpleExtensionURI)},
        {10, -1, -1, sizeof(::substrait::extensions::SimpleExtensionDeclaration_ExtensionType)},
        {21, -1, -1, sizeof(::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation)},
        {32, -1, -1, sizeof(::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction)},
        {43, -1, -1, sizeof(::substrait::extensions::SimpleExtensionDeclaration)},
        {55, 65, -1, sizeof(::substrait::extensions::AdvancedExtension)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::substrait::extensions::_SimpleExtensionURI_default_instance_._instance,
    &::substrait::extensions::_SimpleExtensionDeclaration_ExtensionType_default_instance_._instance,
    &::substrait::extensions::_SimpleExtensionDeclaration_ExtensionTypeVariation_default_instance_._instance,
    &::substrait::extensions::_SimpleExtensionDeclaration_ExtensionFunction_default_instance_._instance,
    &::substrait::extensions::_SimpleExtensionDeclaration_default_instance_._instance,
    &::substrait::extensions::_AdvancedExtension_default_instance_._instance,
};
const char descriptor_table_protodef_substrait_2fextensions_2fextensions_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%substrait/extensions/extensions.proto\022"
    "\024substrait.extensions\032\031google/protobuf/a"
    "ny.proto\"X\n\022SimpleExtensionURI\0220\n\024extens"
    "ion_uri_anchor\030\001 \001(\rR\022extensionUriAnchor"
    "\022\020\n\003uri\030\002 \001(\tR\003uri\"\264\006\n\032SimpleExtensionDe"
    "claration\022g\n\016extension_type\030\001 \001(\0132>.subs"
    "trait.extensions.SimpleExtensionDeclarat"
    "ion.ExtensionTypeH\000R\rextensionType\022\203\001\n\030e"
    "xtension_type_variation\030\002 \001(\0132G.substrai"
    "t.extensions.SimpleExtensionDeclaration."
    "ExtensionTypeVariationH\000R\026extensionTypeV"
    "ariation\022s\n\022extension_function\030\003 \001(\0132B.s"
    "ubstrait.extensions.SimpleExtensionDecla"
    "ration.ExtensionFunctionH\000R\021extensionFun"
    "ction\032|\n\rExtensionType\0226\n\027extension_uri_"
    "reference\030\001 \001(\rR\025extensionUriReference\022\037"
    "\n\013type_anchor\030\002 \001(\rR\ntypeAnchor\022\022\n\004name\030"
    "\003 \001(\tR\004name\032\230\001\n\026ExtensionTypeVariation\0226"
    "\n\027extension_uri_reference\030\001 \001(\rR\025extensi"
    "onUriReference\0222\n\025type_variation_anchor\030"
    "\002 \001(\rR\023typeVariationAnchor\022\022\n\004name\030\003 \001(\t"
    "R\004name\032\210\001\n\021ExtensionFunction\0226\n\027extensio"
    "n_uri_reference\030\001 \001(\rR\025extensionUriRefer"
    "ence\022\'\n\017function_anchor\030\002 \001(\rR\016functionA"
    "nchor\022\022\n\004name\030\003 \001(\tR\004nameB\016\n\014mapping_typ"
    "e\"\205\001\n\021AdvancedExtension\0228\n\014optimization\030"
    "\001 \001(\0132\024.google.protobuf.AnyR\014optimizatio"
    "n\0226\n\013enhancement\030\002 \001(\0132\024.google.protobuf"
    ".AnyR\013enhancementB\323\001\n\030com.substrait.exte"
    "nsionsB\017ExtensionsProtoP\001Z5github.com/su"
    "bstrait-io/substrait-go/proto/extensions"
    "\242\002\003SEX\252\002\024Substrait.Extensions\312\002\024Substrai"
    "t\\Extensions\342\002 Substrait\\Extensions\\GPBM"
    "etadata\352\002\025Substrait::Extensionsb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_substrait_2fextensions_2fextensions_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_substrait_2fextensions_2fextensions_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_substrait_2fextensions_2fextensions_2eproto = {
    false,
    false,
    1359,
    descriptor_table_protodef_substrait_2fextensions_2fextensions_2eproto,
    "substrait/extensions/extensions.proto",
    &descriptor_table_substrait_2fextensions_2fextensions_2eproto_once,
    descriptor_table_substrait_2fextensions_2fextensions_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_substrait_2fextensions_2fextensions_2eproto::offsets,
    file_level_enum_descriptors_substrait_2fextensions_2fextensions_2eproto,
    file_level_service_descriptors_substrait_2fextensions_2fextensions_2eproto,
};
namespace substrait {
namespace extensions {
// ===================================================================

class SimpleExtensionURI::_Internal {
 public:
};

SimpleExtensionURI::SimpleExtensionURI(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:substrait.extensions.SimpleExtensionURI)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionURI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::substrait::extensions::SimpleExtensionURI& from_msg)
      : uri_(arena, from.uri_),
        _cached_size_{0} {}

SimpleExtensionURI::SimpleExtensionURI(
    ::google::protobuf::Arena* arena,
    const SimpleExtensionURI& from)
    : ::google::protobuf::Message(arena) {
  SimpleExtensionURI* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.extension_uri_anchor_ = from._impl_.extension_uri_anchor_;

  // @@protoc_insertion_point(copy_constructor:substrait.extensions.SimpleExtensionURI)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionURI::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : uri_(arena),
        _cached_size_{0} {}

inline void SimpleExtensionURI::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.extension_uri_anchor_ = {};
}
SimpleExtensionURI::~SimpleExtensionURI() {
  // @@protoc_insertion_point(destructor:substrait.extensions.SimpleExtensionURI)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimpleExtensionURI::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uri_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SimpleExtensionURI::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimpleExtensionURI, _impl_._cached_size_),
              false,
          },
          &SimpleExtensionURI::MergeImpl,
          &SimpleExtensionURI::kDescriptorMethods,
          &descriptor_table_substrait_2fextensions_2fextensions_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> SimpleExtensionURI::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SimpleExtensionURI_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionURI>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string uri = 2 [json_name = "uri"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionURI, _impl_.uri_)}},
    // uint32 extension_uri_anchor = 1 [json_name = "extensionUriAnchor"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimpleExtensionURI, _impl_.extension_uri_anchor_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionURI, _impl_.extension_uri_anchor_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 extension_uri_anchor = 1 [json_name = "extensionUriAnchor"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionURI, _impl_.extension_uri_anchor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string uri = 2 [json_name = "uri"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionURI, _impl_.uri_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\0\3\0\0\0\0\0"
    "substrait.extensions.SimpleExtensionURI"
    "uri"
  }},
};

PROTOBUF_NOINLINE void SimpleExtensionURI::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.extensions.SimpleExtensionURI)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  _impl_.extension_uri_anchor_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SimpleExtensionURI::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.extensions.SimpleExtensionURI)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 extension_uri_anchor = 1 [json_name = "extensionUriAnchor"];
  if (this->_internal_extension_uri_anchor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_extension_uri_anchor(), target);
  }

  // string uri = 2 [json_name = "uri"];
  if (!this->_internal_uri().empty()) {
    const std::string& _s = this->_internal_uri();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "substrait.extensions.SimpleExtensionURI.uri");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.extensions.SimpleExtensionURI)
  return target;
}

::size_t SimpleExtensionURI::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.extensions.SimpleExtensionURI)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string uri = 2 [json_name = "uri"];
  if (!this->_internal_uri().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_uri());
  }

  // uint32 extension_uri_anchor = 1 [json_name = "extensionUriAnchor"];
  if (this->_internal_extension_uri_anchor() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_extension_uri_anchor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SimpleExtensionURI::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimpleExtensionURI*>(&to_msg);
  auto& from = static_cast<const SimpleExtensionURI&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.extensions.SimpleExtensionURI)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (from._internal_extension_uri_anchor() != 0) {
    _this->_impl_.extension_uri_anchor_ = from._impl_.extension_uri_anchor_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleExtensionURI::CopyFrom(const SimpleExtensionURI& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.extensions.SimpleExtensionURI)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimpleExtensionURI::InternalSwap(SimpleExtensionURI* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uri_, &other->_impl_.uri_, arena);
        swap(_impl_.extension_uri_anchor_, other->_impl_.extension_uri_anchor_);
}

::google::protobuf::Metadata SimpleExtensionURI::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimpleExtensionDeclaration_ExtensionType::_Internal {
 public:
};

SimpleExtensionDeclaration_ExtensionType::SimpleExtensionDeclaration_ExtensionType(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionDeclaration_ExtensionType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::substrait::extensions::SimpleExtensionDeclaration_ExtensionType& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

SimpleExtensionDeclaration_ExtensionType::SimpleExtensionDeclaration_ExtensionType(
    ::google::protobuf::Arena* arena,
    const SimpleExtensionDeclaration_ExtensionType& from)
    : ::google::protobuf::Message(arena) {
  SimpleExtensionDeclaration_ExtensionType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, extension_uri_reference_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, extension_uri_reference_),
           offsetof(Impl_, type_anchor_) -
               offsetof(Impl_, extension_uri_reference_) +
               sizeof(Impl_::type_anchor_));

  // @@protoc_insertion_point(copy_constructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionDeclaration_ExtensionType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void SimpleExtensionDeclaration_ExtensionType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, extension_uri_reference_),
           0,
           offsetof(Impl_, type_anchor_) -
               offsetof(Impl_, extension_uri_reference_) +
               sizeof(Impl_::type_anchor_));
}
SimpleExtensionDeclaration_ExtensionType::~SimpleExtensionDeclaration_ExtensionType() {
  // @@protoc_insertion_point(destructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimpleExtensionDeclaration_ExtensionType::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SimpleExtensionDeclaration_ExtensionType::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_._cached_size_),
              false,
          },
          &SimpleExtensionDeclaration_ExtensionType::MergeImpl,
          &SimpleExtensionDeclaration_ExtensionType::kDescriptorMethods,
          &descriptor_table_substrait_2fextensions_2fextensions_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 74, 2> SimpleExtensionDeclaration_ExtensionType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SimpleExtensionDeclaration_ExtensionType_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionDeclaration_ExtensionType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimpleExtensionDeclaration_ExtensionType, _impl_.extension_uri_reference_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_.extension_uri_reference_)}},
    // uint32 type_anchor = 2 [json_name = "typeAnchor"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimpleExtensionDeclaration_ExtensionType, _impl_.type_anchor_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_.type_anchor_)}},
    // string name = 3 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_.extension_uri_reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 type_anchor = 2 [json_name = "typeAnchor"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_.type_anchor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string name = 3 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\75\0\0\4\0\0\0\0"
    "substrait.extensions.SimpleExtensionDeclaration.ExtensionType"
    "name"
  }},
};

PROTOBUF_NOINLINE void SimpleExtensionDeclaration_ExtensionType::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.extension_uri_reference_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_anchor_) -
      reinterpret_cast<char*>(&_impl_.extension_uri_reference_)) + sizeof(_impl_.type_anchor_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SimpleExtensionDeclaration_ExtensionType::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
  if (this->_internal_extension_uri_reference() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_extension_uri_reference(), target);
  }

  // uint32 type_anchor = 2 [json_name = "typeAnchor"];
  if (this->_internal_type_anchor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_type_anchor(), target);
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "substrait.extensions.SimpleExtensionDeclaration.ExtensionType.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
  return target;
}

::size_t SimpleExtensionDeclaration_ExtensionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
  if (this->_internal_extension_uri_reference() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_extension_uri_reference());
  }

  // uint32 type_anchor = 2 [json_name = "typeAnchor"];
  if (this->_internal_type_anchor() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_type_anchor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SimpleExtensionDeclaration_ExtensionType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimpleExtensionDeclaration_ExtensionType*>(&to_msg);
  auto& from = static_cast<const SimpleExtensionDeclaration_ExtensionType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_extension_uri_reference() != 0) {
    _this->_impl_.extension_uri_reference_ = from._impl_.extension_uri_reference_;
  }
  if (from._internal_type_anchor() != 0) {
    _this->_impl_.type_anchor_ = from._impl_.type_anchor_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleExtensionDeclaration_ExtensionType::CopyFrom(const SimpleExtensionDeclaration_ExtensionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimpleExtensionDeclaration_ExtensionType::InternalSwap(SimpleExtensionDeclaration_ExtensionType* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_.type_anchor_)
      + sizeof(SimpleExtensionDeclaration_ExtensionType::_impl_.type_anchor_)
      - PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionType, _impl_.extension_uri_reference_)>(
          reinterpret_cast<char*>(&_impl_.extension_uri_reference_),
          reinterpret_cast<char*>(&other->_impl_.extension_uri_reference_));
}

::google::protobuf::Metadata SimpleExtensionDeclaration_ExtensionType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimpleExtensionDeclaration_ExtensionTypeVariation::_Internal {
 public:
};

SimpleExtensionDeclaration_ExtensionTypeVariation::SimpleExtensionDeclaration_ExtensionTypeVariation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionDeclaration_ExtensionTypeVariation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

SimpleExtensionDeclaration_ExtensionTypeVariation::SimpleExtensionDeclaration_ExtensionTypeVariation(
    ::google::protobuf::Arena* arena,
    const SimpleExtensionDeclaration_ExtensionTypeVariation& from)
    : ::google::protobuf::Message(arena) {
  SimpleExtensionDeclaration_ExtensionTypeVariation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, extension_uri_reference_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, extension_uri_reference_),
           offsetof(Impl_, type_variation_anchor_) -
               offsetof(Impl_, extension_uri_reference_) +
               sizeof(Impl_::type_variation_anchor_));

  // @@protoc_insertion_point(copy_constructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionDeclaration_ExtensionTypeVariation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void SimpleExtensionDeclaration_ExtensionTypeVariation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, extension_uri_reference_),
           0,
           offsetof(Impl_, type_variation_anchor_) -
               offsetof(Impl_, extension_uri_reference_) +
               sizeof(Impl_::type_variation_anchor_));
}
SimpleExtensionDeclaration_ExtensionTypeVariation::~SimpleExtensionDeclaration_ExtensionTypeVariation() {
  // @@protoc_insertion_point(destructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimpleExtensionDeclaration_ExtensionTypeVariation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SimpleExtensionDeclaration_ExtensionTypeVariation::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_._cached_size_),
              false,
          },
          &SimpleExtensionDeclaration_ExtensionTypeVariation::MergeImpl,
          &SimpleExtensionDeclaration_ExtensionTypeVariation::kDescriptorMethods,
          &descriptor_table_substrait_2fextensions_2fextensions_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 83, 2> SimpleExtensionDeclaration_ExtensionTypeVariation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SimpleExtensionDeclaration_ExtensionTypeVariation_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.extension_uri_reference_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.extension_uri_reference_)}},
    // uint32 type_variation_anchor = 2 [json_name = "typeVariationAnchor"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.type_variation_anchor_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.type_variation_anchor_)}},
    // string name = 3 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.extension_uri_reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 type_variation_anchor = 2 [json_name = "typeVariationAnchor"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.type_variation_anchor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string name = 3 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\106\0\0\4\0\0\0\0"
    "substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation"
    "name"
  }},
};

PROTOBUF_NOINLINE void SimpleExtensionDeclaration_ExtensionTypeVariation::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.extension_uri_reference_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_variation_anchor_) -
      reinterpret_cast<char*>(&_impl_.extension_uri_reference_)) + sizeof(_impl_.type_variation_anchor_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SimpleExtensionDeclaration_ExtensionTypeVariation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
  if (this->_internal_extension_uri_reference() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_extension_uri_reference(), target);
  }

  // uint32 type_variation_anchor = 2 [json_name = "typeVariationAnchor"];
  if (this->_internal_type_variation_anchor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_type_variation_anchor(), target);
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
  return target;
}

::size_t SimpleExtensionDeclaration_ExtensionTypeVariation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
  if (this->_internal_extension_uri_reference() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_extension_uri_reference());
  }

  // uint32 type_variation_anchor = 2 [json_name = "typeVariationAnchor"];
  if (this->_internal_type_variation_anchor() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_type_variation_anchor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SimpleExtensionDeclaration_ExtensionTypeVariation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimpleExtensionDeclaration_ExtensionTypeVariation*>(&to_msg);
  auto& from = static_cast<const SimpleExtensionDeclaration_ExtensionTypeVariation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_extension_uri_reference() != 0) {
    _this->_impl_.extension_uri_reference_ = from._impl_.extension_uri_reference_;
  }
  if (from._internal_type_variation_anchor() != 0) {
    _this->_impl_.type_variation_anchor_ = from._impl_.type_variation_anchor_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleExtensionDeclaration_ExtensionTypeVariation::CopyFrom(const SimpleExtensionDeclaration_ExtensionTypeVariation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimpleExtensionDeclaration_ExtensionTypeVariation::InternalSwap(SimpleExtensionDeclaration_ExtensionTypeVariation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.type_variation_anchor_)
      + sizeof(SimpleExtensionDeclaration_ExtensionTypeVariation::_impl_.type_variation_anchor_)
      - PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionTypeVariation, _impl_.extension_uri_reference_)>(
          reinterpret_cast<char*>(&_impl_.extension_uri_reference_),
          reinterpret_cast<char*>(&other->_impl_.extension_uri_reference_));
}

::google::protobuf::Metadata SimpleExtensionDeclaration_ExtensionTypeVariation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimpleExtensionDeclaration_ExtensionFunction::_Internal {
 public:
};

SimpleExtensionDeclaration_ExtensionFunction::SimpleExtensionDeclaration_ExtensionFunction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionDeclaration_ExtensionFunction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

SimpleExtensionDeclaration_ExtensionFunction::SimpleExtensionDeclaration_ExtensionFunction(
    ::google::protobuf::Arena* arena,
    const SimpleExtensionDeclaration_ExtensionFunction& from)
    : ::google::protobuf::Message(arena) {
  SimpleExtensionDeclaration_ExtensionFunction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, extension_uri_reference_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, extension_uri_reference_),
           offsetof(Impl_, function_anchor_) -
               offsetof(Impl_, extension_uri_reference_) +
               sizeof(Impl_::function_anchor_));

  // @@protoc_insertion_point(copy_constructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionDeclaration_ExtensionFunction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void SimpleExtensionDeclaration_ExtensionFunction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, extension_uri_reference_),
           0,
           offsetof(Impl_, function_anchor_) -
               offsetof(Impl_, extension_uri_reference_) +
               sizeof(Impl_::function_anchor_));
}
SimpleExtensionDeclaration_ExtensionFunction::~SimpleExtensionDeclaration_ExtensionFunction() {
  // @@protoc_insertion_point(destructor:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimpleExtensionDeclaration_ExtensionFunction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SimpleExtensionDeclaration_ExtensionFunction::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_._cached_size_),
              false,
          },
          &SimpleExtensionDeclaration_ExtensionFunction::MergeImpl,
          &SimpleExtensionDeclaration_ExtensionFunction::kDescriptorMethods,
          &descriptor_table_substrait_2fextensions_2fextensions_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 78, 2> SimpleExtensionDeclaration_ExtensionFunction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SimpleExtensionDeclaration_ExtensionFunction_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimpleExtensionDeclaration_ExtensionFunction, _impl_.extension_uri_reference_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_.extension_uri_reference_)}},
    // uint32 function_anchor = 2 [json_name = "functionAnchor"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SimpleExtensionDeclaration_ExtensionFunction, _impl_.function_anchor_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_.function_anchor_)}},
    // string name = 3 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_.extension_uri_reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 function_anchor = 2 [json_name = "functionAnchor"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_.function_anchor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string name = 3 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\0\0\4\0\0\0\0"
    "substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction"
    "name"
  }},
};

PROTOBUF_NOINLINE void SimpleExtensionDeclaration_ExtensionFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.extension_uri_reference_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.function_anchor_) -
      reinterpret_cast<char*>(&_impl_.extension_uri_reference_)) + sizeof(_impl_.function_anchor_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SimpleExtensionDeclaration_ExtensionFunction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
  if (this->_internal_extension_uri_reference() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_extension_uri_reference(), target);
  }

  // uint32 function_anchor = 2 [json_name = "functionAnchor"];
  if (this->_internal_function_anchor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_function_anchor(), target);
  }

  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
  return target;
}

::size_t SimpleExtensionDeclaration_ExtensionFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 3 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint32 extension_uri_reference = 1 [json_name = "extensionUriReference"];
  if (this->_internal_extension_uri_reference() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_extension_uri_reference());
  }

  // uint32 function_anchor = 2 [json_name = "functionAnchor"];
  if (this->_internal_function_anchor() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_function_anchor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SimpleExtensionDeclaration_ExtensionFunction::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimpleExtensionDeclaration_ExtensionFunction*>(&to_msg);
  auto& from = static_cast<const SimpleExtensionDeclaration_ExtensionFunction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_extension_uri_reference() != 0) {
    _this->_impl_.extension_uri_reference_ = from._impl_.extension_uri_reference_;
  }
  if (from._internal_function_anchor() != 0) {
    _this->_impl_.function_anchor_ = from._impl_.function_anchor_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleExtensionDeclaration_ExtensionFunction::CopyFrom(const SimpleExtensionDeclaration_ExtensionFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimpleExtensionDeclaration_ExtensionFunction::InternalSwap(SimpleExtensionDeclaration_ExtensionFunction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_.function_anchor_)
      + sizeof(SimpleExtensionDeclaration_ExtensionFunction::_impl_.function_anchor_)
      - PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration_ExtensionFunction, _impl_.extension_uri_reference_)>(
          reinterpret_cast<char*>(&_impl_.extension_uri_reference_),
          reinterpret_cast<char*>(&other->_impl_.extension_uri_reference_));
}

::google::protobuf::Metadata SimpleExtensionDeclaration_ExtensionFunction::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimpleExtensionDeclaration::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::substrait::extensions::SimpleExtensionDeclaration, _impl_._oneof_case_);
};

void SimpleExtensionDeclaration::set_allocated_extension_type(::substrait::extensions::SimpleExtensionDeclaration_ExtensionType* extension_type) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_mapping_type();
  if (extension_type) {
    ::google::protobuf::Arena* submessage_arena = extension_type->GetArena();
    if (message_arena != submessage_arena) {
      extension_type = ::google::protobuf::internal::GetOwnedMessage(message_arena, extension_type, submessage_arena);
    }
    set_has_extension_type();
    _impl_.mapping_type_.extension_type_ = extension_type;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.extensions.SimpleExtensionDeclaration.extension_type)
}
void SimpleExtensionDeclaration::set_allocated_extension_type_variation(::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation* extension_type_variation) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_mapping_type();
  if (extension_type_variation) {
    ::google::protobuf::Arena* submessage_arena = extension_type_variation->GetArena();
    if (message_arena != submessage_arena) {
      extension_type_variation = ::google::protobuf::internal::GetOwnedMessage(message_arena, extension_type_variation, submessage_arena);
    }
    set_has_extension_type_variation();
    _impl_.mapping_type_.extension_type_variation_ = extension_type_variation;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.extensions.SimpleExtensionDeclaration.extension_type_variation)
}
void SimpleExtensionDeclaration::set_allocated_extension_function(::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction* extension_function) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_mapping_type();
  if (extension_function) {
    ::google::protobuf::Arena* submessage_arena = extension_function->GetArena();
    if (message_arena != submessage_arena) {
      extension_function = ::google::protobuf::internal::GetOwnedMessage(message_arena, extension_function, submessage_arena);
    }
    set_has_extension_function();
    _impl_.mapping_type_.extension_function_ = extension_function;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.extensions.SimpleExtensionDeclaration.extension_function)
}
SimpleExtensionDeclaration::SimpleExtensionDeclaration(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:substrait.extensions.SimpleExtensionDeclaration)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionDeclaration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::substrait::extensions::SimpleExtensionDeclaration& from_msg)
      : mapping_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

SimpleExtensionDeclaration::SimpleExtensionDeclaration(
    ::google::protobuf::Arena* arena,
    const SimpleExtensionDeclaration& from)
    : ::google::protobuf::Message(arena) {
  SimpleExtensionDeclaration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (mapping_type_case()) {
    case MAPPING_TYPE_NOT_SET:
      break;
      case kExtensionType:
        _impl_.mapping_type_.extension_type_ = ::google::protobuf::Message::CopyConstruct<::substrait::extensions::SimpleExtensionDeclaration_ExtensionType>(arena, *from._impl_.mapping_type_.extension_type_);
        break;
      case kExtensionTypeVariation:
        _impl_.mapping_type_.extension_type_variation_ = ::google::protobuf::Message::CopyConstruct<::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation>(arena, *from._impl_.mapping_type_.extension_type_variation_);
        break;
      case kExtensionFunction:
        _impl_.mapping_type_.extension_function_ = ::google::protobuf::Message::CopyConstruct<::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction>(arena, *from._impl_.mapping_type_.extension_function_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:substrait.extensions.SimpleExtensionDeclaration)
}
inline PROTOBUF_NDEBUG_INLINE SimpleExtensionDeclaration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mapping_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void SimpleExtensionDeclaration::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SimpleExtensionDeclaration::~SimpleExtensionDeclaration() {
  // @@protoc_insertion_point(destructor:substrait.extensions.SimpleExtensionDeclaration)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimpleExtensionDeclaration::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_mapping_type()) {
    clear_mapping_type();
  }
  _impl_.~Impl_();
}

void SimpleExtensionDeclaration::clear_mapping_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.extensions.SimpleExtensionDeclaration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (mapping_type_case()) {
    case kExtensionType: {
      if (GetArena() == nullptr) {
        delete _impl_.mapping_type_.extension_type_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.mapping_type_.extension_type_);
      }
      break;
    }
    case kExtensionTypeVariation: {
      if (GetArena() == nullptr) {
        delete _impl_.mapping_type_.extension_type_variation_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.mapping_type_.extension_type_variation_);
      }
      break;
    }
    case kExtensionFunction: {
      if (GetArena() == nullptr) {
        delete _impl_.mapping_type_.extension_function_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.mapping_type_.extension_function_);
      }
      break;
    }
    case MAPPING_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MAPPING_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
SimpleExtensionDeclaration::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration, _impl_._cached_size_),
              false,
          },
          &SimpleExtensionDeclaration::MergeImpl,
          &SimpleExtensionDeclaration::kDescriptorMethods,
          &descriptor_table_substrait_2fextensions_2fextensions_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> SimpleExtensionDeclaration::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SimpleExtensionDeclaration_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionDeclaration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .substrait.extensions.SimpleExtensionDeclaration.ExtensionType extension_type = 1 [json_name = "extensionType"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration, _impl_.mapping_type_.extension_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation extension_type_variation = 2 [json_name = "extensionTypeVariation"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration, _impl_.mapping_type_.extension_type_variation_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction extension_function = 3 [json_name = "extensionFunction"];
    {PROTOBUF_FIELD_OFFSET(SimpleExtensionDeclaration, _impl_.mapping_type_.extension_function_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionDeclaration_ExtensionType>()},
    {::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation>()},
    {::_pbi::TcParser::GetTable<::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SimpleExtensionDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.extensions.SimpleExtensionDeclaration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mapping_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SimpleExtensionDeclaration::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.extensions.SimpleExtensionDeclaration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (mapping_type_case()) {
    case kExtensionType: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.mapping_type_.extension_type_, _impl_.mapping_type_.extension_type_->GetCachedSize(), target, stream);
      break;
    }
    case kExtensionTypeVariation: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.mapping_type_.extension_type_variation_, _impl_.mapping_type_.extension_type_variation_->GetCachedSize(), target, stream);
      break;
    }
    case kExtensionFunction: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.mapping_type_.extension_function_, _impl_.mapping_type_.extension_function_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.extensions.SimpleExtensionDeclaration)
  return target;
}

::size_t SimpleExtensionDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.extensions.SimpleExtensionDeclaration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (mapping_type_case()) {
    // .substrait.extensions.SimpleExtensionDeclaration.ExtensionType extension_type = 1 [json_name = "extensionType"];
    case kExtensionType: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mapping_type_.extension_type_);
      break;
    }
    // .substrait.extensions.SimpleExtensionDeclaration.ExtensionTypeVariation extension_type_variation = 2 [json_name = "extensionTypeVariation"];
    case kExtensionTypeVariation: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mapping_type_.extension_type_variation_);
      break;
    }
    // .substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction extension_function = 3 [json_name = "extensionFunction"];
    case kExtensionFunction: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.mapping_type_.extension_function_);
      break;
    }
    case MAPPING_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SimpleExtensionDeclaration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimpleExtensionDeclaration*>(&to_msg);
  auto& from = static_cast<const SimpleExtensionDeclaration&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.extensions.SimpleExtensionDeclaration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_mapping_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kExtensionType: {
        if (oneof_needs_init) {
          _this->_impl_.mapping_type_.extension_type_ =
              ::google::protobuf::Message::CopyConstruct<::substrait::extensions::SimpleExtensionDeclaration_ExtensionType>(arena, *from._impl_.mapping_type_.extension_type_);
        } else {
          _this->_impl_.mapping_type_.extension_type_->MergeFrom(from._internal_extension_type());
        }
        break;
      }
      case kExtensionTypeVariation: {
        if (oneof_needs_init) {
          _this->_impl_.mapping_type_.extension_type_variation_ =
              ::google::protobuf::Message::CopyConstruct<::substrait::extensions::SimpleExtensionDeclaration_ExtensionTypeVariation>(arena, *from._impl_.mapping_type_.extension_type_variation_);
        } else {
          _this->_impl_.mapping_type_.extension_type_variation_->MergeFrom(from._internal_extension_type_variation());
        }
        break;
      }
      case kExtensionFunction: {
        if (oneof_needs_init) {
          _this->_impl_.mapping_type_.extension_function_ =
              ::google::protobuf::Message::CopyConstruct<::substrait::extensions::SimpleExtensionDeclaration_ExtensionFunction>(arena, *from._impl_.mapping_type_.extension_function_);
        } else {
          _this->_impl_.mapping_type_.extension_function_->MergeFrom(from._internal_extension_function());
        }
        break;
      }
      case MAPPING_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleExtensionDeclaration::CopyFrom(const SimpleExtensionDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.extensions.SimpleExtensionDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimpleExtensionDeclaration::InternalSwap(SimpleExtensionDeclaration* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.mapping_type_, other->_impl_.mapping_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata SimpleExtensionDeclaration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AdvancedExtension::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AdvancedExtension>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_._has_bits_);
};

void AdvancedExtension::clear_optimization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optimization_ != nullptr) _impl_.optimization_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AdvancedExtension::clear_enhancement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.enhancement_ != nullptr) _impl_.enhancement_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
AdvancedExtension::AdvancedExtension(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:substrait.extensions.AdvancedExtension)
}
inline PROTOBUF_NDEBUG_INLINE AdvancedExtension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::substrait::extensions::AdvancedExtension& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AdvancedExtension::AdvancedExtension(
    ::google::protobuf::Arena* arena,
    const AdvancedExtension& from)
    : ::google::protobuf::Message(arena) {
  AdvancedExtension* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.optimization_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.optimization_)
                        : nullptr;
  _impl_.enhancement_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.enhancement_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:substrait.extensions.AdvancedExtension)
}
inline PROTOBUF_NDEBUG_INLINE AdvancedExtension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AdvancedExtension::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optimization_),
           0,
           offsetof(Impl_, enhancement_) -
               offsetof(Impl_, optimization_) +
               sizeof(Impl_::enhancement_));
}
AdvancedExtension::~AdvancedExtension() {
  // @@protoc_insertion_point(destructor:substrait.extensions.AdvancedExtension)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AdvancedExtension::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.optimization_;
  delete _impl_.enhancement_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AdvancedExtension::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_._cached_size_),
              false,
          },
          &AdvancedExtension::MergeImpl,
          &AdvancedExtension::kDescriptorMethods,
          &descriptor_table_substrait_2fextensions_2fextensions_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> AdvancedExtension::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AdvancedExtension_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::substrait::extensions::AdvancedExtension>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any enhancement = 2 [json_name = "enhancement"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_.enhancement_)}},
    // .google.protobuf.Any optimization = 1 [json_name = "optimization"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_.optimization_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Any optimization = 1 [json_name = "optimization"];
    {PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_.optimization_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Any enhancement = 2 [json_name = "enhancement"];
    {PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_.enhancement_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AdvancedExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.extensions.AdvancedExtension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.optimization_ != nullptr);
      _impl_.optimization_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.enhancement_ != nullptr);
      _impl_.enhancement_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AdvancedExtension::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:substrait.extensions.AdvancedExtension)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Any optimization = 1 [json_name = "optimization"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.optimization_, _impl_.optimization_->GetCachedSize(), target, stream);
  }

  // .google.protobuf.Any enhancement = 2 [json_name = "enhancement"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.enhancement_, _impl_.enhancement_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.extensions.AdvancedExtension)
  return target;
}

::size_t AdvancedExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.extensions.AdvancedExtension)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Any optimization = 1 [json_name = "optimization"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.optimization_);
    }

    // .google.protobuf.Any enhancement = 2 [json_name = "enhancement"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.enhancement_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AdvancedExtension::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AdvancedExtension*>(&to_msg);
  auto& from = static_cast<const AdvancedExtension&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:substrait.extensions.AdvancedExtension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.optimization_ != nullptr);
      if (_this->_impl_.optimization_ == nullptr) {
        _this->_impl_.optimization_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.optimization_);
      } else {
        _this->_impl_.optimization_->MergeFrom(*from._impl_.optimization_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.enhancement_ != nullptr);
      if (_this->_impl_.enhancement_ == nullptr) {
        _this->_impl_.enhancement_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.enhancement_);
      } else {
        _this->_impl_.enhancement_->MergeFrom(*from._impl_.enhancement_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AdvancedExtension::CopyFrom(const AdvancedExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.extensions.AdvancedExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AdvancedExtension::InternalSwap(AdvancedExtension* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_.enhancement_)
      + sizeof(AdvancedExtension::_impl_.enhancement_)
      - PROTOBUF_FIELD_OFFSET(AdvancedExtension, _impl_.optimization_)>(
          reinterpret_cast<char*>(&_impl_.optimization_),
          reinterpret_cast<char*>(&other->_impl_.optimization_));
}

::google::protobuf::Metadata AdvancedExtension::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace extensions
}  // namespace substrait
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_substrait_2fextensions_2fextensions_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
